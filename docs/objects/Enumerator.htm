<html>
<head>
<title>Enumerator</title>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>열거 객체 <span class="ver">[AHK_L 49+]</span></h1>

<p>집단 안의 항목들을 열거합니다.</p>

<div class="methodShort">
<h2 id="Next">Next</h2>

<p>다음으로 열거된 항목을 열람합니다.</p>
<pre class="Syntax">Enum.Next(OutputVar1 [, OutputVar2, ...])</pre>
<table class="info">
  <tr><td width="15%">OutputVar1, OutputVar2</td><td width="85%">구현에-종속적인 값을 열람합니다.</td></tr>
  <tr><td>...</td><td>지원되면, 추가 매개변수.</td></tr>
  <tr><td><b>Returns</b></td><td>성공하면 0-아닌 정수, 항목이 남아 있지 않으면 0, 또는 매개변수가 올바르지 않으면 빈 문자열을 돌려줍니다.</td></tr>
</table>

<h3>객체</h3>
<p><a href="Object.htm#NewEnum">ObjNewEnum()</a>가 돌려주는 열거자는 키-값 쌍마다 한 번식 호출됩니다. 매개변수는 두 개까지 허용합니다:</p>
<table class="info">
  <tr><td width="15%">OutputVar1</td><td width="85%">키-값 쌍에서 키(<b>key</b>)를 받습니다.</td></tr>
  <tr><td>OutputVar2</td><td> <i>OutputVar1</i>와 연관된 값(<b>value</b>)를 받습니다.</td></tr>
</table>
<p>
키-값 쌍은 구현에-정의된 순서로 반환됩니다. 즉, 전형적으로 할당된 순서와 같은 순서로 반환되지 않습니다. 기존의 키-값 쌍은 열거 중에 변경할 수는 있지만, 키를 삽입하거나 삭제하면 항목들이 여러 번 열거되거나 전혀 열거되지 않거나 뒤죽박죽이 됩니다.</p>

<h3>관련 항목</h3>
<a href="../commands/For.htm">For-회돌이</a>, <a href="Object.htm#NewEnum">Object.NewEnum()</a>

<h3>예제</h3>
<pre class="NoIndent"><em>; 샘플 데이터를 만듭니다.</em>
obj := Object("red", 0xFF0000, "blue", 0x0000FF, "green", 0x00FF00)

<em>; 열거합니다!</em>
enum := obj._NewEnum()
While enum[k, v]
    t .= k "=" v "`n"
MsgBox % t

<em>; AHK_L 59+</em>
For k, v in obj
    s .= k "=" v "`n"
MsgBox % s
</pre>
</div>

</body>
</html>
