

<html>
<head>
<title>ControlClick</title>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlClick</h1>

<p>마우스 버튼이나 마우스 휠 이벤트를 콘트롤에 보냅니다.</p>

<pre class="Syntax">ControlClick [, Control-or-Pos, WinTitle, WinText, WhichButton, ClickCount, Options, ExcludeTitle, ExcludeText]</pre>
<h3>매개변수</h3>
<dl>

  <dt>Control-or-Pos</dt>
  <dd><p>이 매개변수가 비어 있으면, 목표 창의 최상위 콘트롤이 클릭됩니다 (또는 콘트롤이 없으면 목표 창 자체가 클릭됩니다). 그렇지 않으면, 아래의 두 모드 중 하나가 사용됩니다.</p>
      <p>
	  Mode 1 (Position): 목표 창의 좌상 모서리에 상대적인 X와 Y 좌표를 지정하십시오. X 좌표가 Y 좌표보다 먼저 나와야 하고 적어도 하나의 탭이나 스페이스가 그 사이에 있어야 합니다. 예를 들어: <code>X55 Y33</code>. 지정된 좌표에 콘트롤이 있다면, 그 좌표에 정확하게 클릭 이벤트가 전송됩니다. 콘트롤이 없다면, 목표 창 자체에 그 이벤트가 전송됩니다 (창의 성질에 따라 아무 효과가 없을 수 있습니다). 주의: 이 모드에서, <em>Options</em> 매개변수의 X와 Y 옵션 기호는 무시됩니다.</p>      
      <p>
	  Mode 2 (ClassNN 또는 Text): ClassNN (콘트롤의 클래스이름과 실체 번호) 또는 콘트롤의 이름/텍스트를 지정하십시오. 둘 모두 Window Spy로 알아낼 수 있습니다. 이름/텍스트를 사용할 때, 부합하는 창은 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>로 결정됩니다.</p>
      <p>
	  기본값으로 모드 2가 모드 1보다 우선 순위가 높습니다. 
	  
	  예를 들어, 혹시라도 한 콘트롤의 텍스트나 ClassNN이 &quot;Xnnn Ynnn&quot; 형식이라면, 그러면 Mode 2인 것처럼 작동할 것입니다. 
	  
	  이를 오버라이드해서 무조건 모드 1을 사용하려면, 단어 Pos를 <em>Options</em>에 다음 예제와 같이 지정하십시오: <code>ControlClick, x255 y152, WinTitle,,,, Pos</code>.</p>
      <p>
	  콘트롤의 HWND (창 핸들)에 작동시키라면, 이 매개변수를 빈 채로 두고  <code>ahk_id %ControlHwnd%</code>를 <em>WinTitle</em> 매개변수에 지정하십시오 (이것은 또한 숨은 창에도 작동합니다. <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>가 꺼져 있어도 됩니다). 콘트롤의 HWND는 전형적으로<a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, 또는 <a href="DllCall.htm">DllCall</a>을 통하여 열람됩니다.</p></dd>

  <dt>WinTitle</dt>
  <dd><p>창 제목 또는 목표 창을 식별하는 기타 기준. <a href="../misc/WinTitle.htm">WinTitle</a> 참조.</p></dd>

  <dt>WinText</dt>
  <dd><p>존재하면, 이 매개변수는 목표 창 텍스트의 부문자열입니다 (Window Spy에 노출됨). 숨은 텍스트는 <a href="DetectHiddenText.htm">DetectHiddenText</a>가 켜져 있어야 탐지됩니다.</p></dd>

  <dt>WhichButton</dt>
  <dd><p>클릭할 버튼: LEFT, RIGHT, MIDDLE (또는 그냥 각 첫 문자). 생략하거나 비어 있으면,  LEFT 버튼이 사용됩니다.</p>
      <p>X1 (XButton1, 네 번째 마우스 버튼) 그리고 X2 (XButton2, 다섯 번째 마우스 버튼)도 지원됩니다.</p>
      <p>WheelUp (또는 WU) 그리고 WheelDown (또는 WD)도 지원됩니다. 이 경우, <em>ClickCount</em>는 휠을 돌릴 눈금의 개수입니다.</p>
      <p>Windows Vista 이상 <span class="ver">[v1.0.48+]:</span> WheelLeft (또는 WL) and WheelRight (또는 WR)도 지원됩니다 (예전 운영 체제에서는 아무 효과도 없습니다). 이 경우, <em>ClickCount</em>는 휠을 돌릴 눈금의 개수입니다.</p>
    </dd>

  <dt>ClickCount</dt>
  <dd><p>보낼 클릭 횟수, <a href="../Variables.htm#Expressions">표현식</a>이 가능합니다. 생략되거나 비어 있으면, 1 클릭이 전송됩니다.</p></dd>

  <dt>Options</dt>
  <dd><p>다음 기호들이 옵션으로 사용됩니다. 예를 들어: <code>d x50 y25</code>.</p>
      <p><strong>NA</strong> <span class="ver">[v1.0.45+]:</span> 신뢰성을 개선할 수 있습니다. 아래의 <a href="#Reliability">신뢰성</a>을 참조하십시오.</p>
      <p><strong>D</strong>: 마우스 버튼을 누르지만 떼지 않습니다 (즉, 누르기-이벤트 발생). <strong>D</strong>와 <strong>U</strong> 옵션이 모두 없으면, (누르고 뗀) 완전한 클릭이 전송됩니다.</p>
      <p><strong>U</strong>: 마우스 버튼을 뗍니다 (즉 뗌-이벤트 발생). 이 옵션은 <strong>D</strong> 옵션이 이미 있으면 나타나면 안됩니다 (그 반대도 마찬가지입니다).</p>
      <p><strong>Pos</strong>: 단어 Pos를 <em>Options</em> 아무데나 지정하면, 위의 <em>Control-or-Pos</em> 매개변수에 기술되어 있듯이 무조건 X/Y 위치 지정 모드를 사용합니다.</p>
      <p><strong>Xn</strong>: <strong>n</strong>에다 클릭할 X 위치를 지정합니다. 이 위치는 콘트롤의 좌상 모서리에 상대적입니다. 지정하지 않으면, 클릭이 콘트롤의 수평-중앙에 일어납니다.</p>
      <p><strong>Yn</strong>: <strong>n</strong>에다 클릭할 Y 위치를 지정합니다. 이 위치는 콘트롤의 좌상 모서리에 상대적입니다. 지정하지 않으면 클릭이 수직-중앙에 일어납니다.</p>
      <p><strong>X</strong>와 <strong>Y</strong> 옵션에 십진수를 사용합니다 (십육진수 불가).</p></dd>

  <dt>ExcludeTitle</dt>
  <dd><p>제목에 이 값이 있는 창은 무시합니다.</p></dd>

  <dt>ExcludeText</dt>
  <dd><p>텍스트에 이 값이 있는 창은 무시합니다.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p>
<span class="ver">[v1.1.04+]</span> 이 명령어는 실패하면 예외를 던질 수 있습니다. 더 자세한 정보는 <a href="Catch.htm#RuntimeErrors">실행시간 에러</a>를 참조하십시오.</p>
<p>
<a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 문제가 있으면 1, 그렇지 않으면 0이 설정됩니다.</p>

<h3 id="Reliability">신뢰성</h3>
<p>
신뢰성을 개선하려면 -- 특히 ControlClick이 작동하는 동안 사용자가 물리적으로 마우스를 움직이면 -- 다음 방법이 도움이 될 것입니다:</p>
<p>1) ControlClick 전에 <code><a href="SetControlDelay.htm">SetControlDelay -1</a></code>를 사용합니다. 이렇게 하면 클릭하는 동안 마우스를 누르고 있을 필요가 없습니다. 이 덕분에 사용자의 물리적 마우스 이동과의 간섭 가능성이 줄어듭니다.</p>
<p>2) 아래와 같이 문자열 NA를 여섯 번째 매개변수 아무데나 (<em>Options</em>) 지정합니다:</p>
<pre>SetControlDelay -1
ControlClick, Toolbar321, WinTitle,,,, NA</pre>
<p>
<code>NA</code>를 지정하면 목표 창을 활성화 상태로 표식을 할 필요가 없고 그의 입력 처리를 스크립트이 입력 처리와 병합할 필요가 없습니다. 이 덕분에 마우스의 물리적 이동 때문에 간섭 받지 않아도 됩니다 (그러나 보통 목표 창이 비활성화 상태일 경우에만 그렇습니다). 그렇지만, 이 방법은 모든 유형의 창과 콘트롤에 작동하는 것은 아닙니다.</p>

<h3>논평</h3>
<p>
모든 어플리케이션이 마우스 휠을 돌릴 때 1보다 큰 <em>ClickCount</em>를 준수하는 것은 아닙니다. 그런 어플리케이션이라면 Loop를 사용해 한 눈금 이상 휠을 돌리십시오. 다음 예제는 다섯 눈금을 돌리고 있습니다:</p>
<pre>Loop, 5
    ControlClick, <i>Control</i>, <i>WinTitle</i>, <i>WinText</i>, WheelUp</pre>
<p>
창 제목 또는 텍스트는 대소문자에 민감합니다. 숨은 창은 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>가 켜져 있어야 탐지됩니다.</p>

<h3>관련 항목</h3>
<p>
<a href="SetControlDelay.htm">SetControlDelay</a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlGetPos.htm">ControlGetPos</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="Click.htm">Click</a></p>

<h3>예제</h3>
<pre class="NoIndent">ControlClick, OK, Some Window Title  <em>; OK 버튼을 클릭합니다</em>
ControlClick, x55 y77, WinTitle  <em>; 좌표 세트를 클릭합니다. X와 Y 사이에 쉼표가 없는 것에 주목하십시오.</em>

<em>; 다음 방법은 신뢰성을 개선하고 부작용을 줄여줍니다:</em>
SetControlDelay -1
ControlClick, Toolbar321, WinTitle,,,, NA x192 y10  <em>; 지정한 이름의 콘트롤에 상대적인 좌표를 NA 모드에서 클릭합니다.</em></pre>

</body>
</html>
