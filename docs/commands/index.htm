

<html>
<head>
<title>Alphabetical Command and Function Index</title>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<style type="text/css">
<!--
.larger {font-size:130%;font-weight:normal}
-->
</style>
</head>
<body>

<h1>명령어와 함수 인덱스</h1>
<p>
더 자세한 정보는 함수나 명령어 이름에 클릭하십시오. 자주 사용하는 엔트리들은 <span class="larger">큰 글꼴</span>로 표시했습니다.</p>

<table class="info">
  <tr>
    <th width="25%">엔트리</th>
    <th width="75%">설명</th>
  </tr>
  <tr>
    <td class="larger"><a href="Block.htm">{ ... } (블록)</a></td>
    <td>한 쌍의 반괄호는 블록을 나타냅니다. 블록은 전형적으로 <a href="../Functions.htm">함수</a>, <a href="Else.htm">Else</a>, <a href="Loop.htm">Loop</a>, <a href="While.htm">While-loop</a>, 그리고 IF-명령어와 함께 사용됩니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="../Objects.htm#Usage_Associative_Arrays">{ ... } / Object()</a></td>
    <td>스크립트가 가능한 연관 배열을 생성합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="../Objects.htm#Usage">[ ... ] / Array()</a></td>
    <td>스크립트가 가능한 연관 배열을 정수 키로 생성합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Abs">Abs()</a></td>
    <td><em>숫자</em>의 절대값을 돌려줍니다.</td>
  </tr>
  <tr>
    <td><a href="AutoTrim.htm">AutoTrim</a></td>
    <td><a href="SetEnv.htm"><code>Var1 = %Var2%</code></a> 서술문에서  Var2의 처음과 끝에서 탭과  스페이스를 걷어낼지 말지 결정합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#ASin">ASin()</a></td>
    <td>아크사인을 라디안 단위로 돌려줍니다 (<em>Number</em>는 사인 값).</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#ACos">ACos()</a></td>
    <td>아크코사인을 라디안 단위로 돌려줍니다 (<em>Number</em>는 코사인 값).</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#ATan">ATan()</a></td>
    <td>아크탄젠트를 라디안 단위로 돌려줍니다 (<em>Number</em>는 탄젠트 값).</td>
  </tr>
  <tr>
    <td><a href="BlockInput.htm">BlockInput</a></td>
    <td>사용자가 키보드와 마우스를 통하여 컴퓨터와 대화하도록 켜거나 끕니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Break.htm">Break</a></td>
    <td><a href="Loop.htm">회돌이</a>를 빠져 나옵니다. 모든 종류의 <a href="Loop.htm">회돌이</a> 안에서 유효합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Catch.htm">Catch</a></td>
    <td><a href="Try.htm">try</a> 서술문을 실행하는 동안에 에러가 일어나면 실행할 코드를 지정합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Ceil">Ceil()</a></td>
    <td><em>Number</em>는 가장 가까운 정수로 올림됩니다 (.00 버림).</td>
  </tr>
  <tr>
    <td class="larger"><a href="Click.htm">Click</a></td>
    <td>지정된 좌표에 마우스 버튼을 클릭합니다. 마우스 버튼을 누르거나, 마우스 휠을 돌리거나, 또는 마우스를 이동할 수 있습니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="ClipWait.htm">ClipWait</a></td>
    <td><a href="../misc/Clipboard.htm">클립보드</a>에 데이터가 들어올 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjActive.htm">ComObjActive()</a></td>
    <td>등록된 COM 객체를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjArray.htm">ComObjArray()</a></td>
    <td>COM에 사용할 SAFEARRAY를 생성합니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjConnect.htm">ComObjConnect()</a></td>
    <td>COM 객체의 이벤트 소스를 주어진 접두사를 가진 함수들에 연결합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="ComObjCreate.htm">ComObjCreate()</a></td>
    <td>COM 객체를 생성합니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjActive.htm">ComObjEnwrap() / ComObjUnwrap()</a></td>
    <td>COM 객체를 싸거나 풉니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjError.htm">ComObjError()</a></td>
    <td>COM 에러의 고지를 켜거나 끕니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjFlags.htm">ComObjFlags()</a></td>
    <td>COM 포장자 객체의 행위를 제어하는 플래그를 열람하거나 변경합니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjGet.htm">ComObjGet()</a></td>
    <td>COM 컴포넌트가 제공하는 객체의 참조 주소를 돌려줍니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjActive.htm">ComObjMissing()</a></td>
    <td>COM 메쏘드에 건넬 "missing parameter" 객체를 만듭니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjActive.htm">ComObjParameter()</a></td>
    <td>값과 유형을 싸서 매개변수로 COM 메쏘드에 건넵니다.</td>
  <tr>
    <td><a href="ComObjQuery.htm">ComObjQuery()</a></td>
    <td>COM 객체에 인터페이스나 서비스를 질의합니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjType.htm">ComObjType()</a></td>
    <td>COM 객체에서 유형 정보를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="ComObjValue.htm">ComObjValue()</a></td>
    <td>COM 포장자 객체에 저장된 값이나 포인터를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="Continue.htm">Continue</a></td>
    <td>현재 남아 있는 <a href="Loop.htm">회돌이</a> 반복을 건너뛰고 다시 새로 회돌이를 시작합니다. 어떤 종류의 <a href="Loop.htm">회돌이</a> 안에서도 유효합니다.</td>
  </tr>
  <tr>
    <td><a href="Control.htm">Control</a></td>
    <td>콘트롤에 다양한 변경을 합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlClick.htm">ControlClick</a></td>
    <td>마우스 버튼 이벤트나 마우스 휠 이벤트를 콘트롤에 보냅니다.</td>
  </tr>
  <tr>
    <td><a href="ControlFocus.htm">ControlFocus</a></td>
    <td>창위의 콘트롤에 입력 초점을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlGet.htm">ControlGet</a></td>
    <td>콘트롤에 관하여 다양한 유형 정보를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlGetFocus.htm">ControlGetFocus</a></td>
    <td>목표 창에서 어느 콘트롤이 입력 초점을 가지고 있는지 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlGetPos.htm">ControlGetPos</a></td>
    <td>콘트롤의 위치와 크기를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlGetText.htm">ControlGetText</a></td>
    <td>콘트롤에서 텍스트를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlMove.htm">ControlMove</a></td>
    <td>콘트롤을 이동하거나 크기를 바꿉니다.</td>
  </tr>
  <tr>
    <td><a href="ControlSend.htm">ControlSend / ControlSendRaw</a></td>
    <td>시뮬레이트 키를 창이나 콘트롤에 전송합니다.</td>
  </tr>
  <tr>
    <td><a href="ControlSetText.htm">ControlSetText</a></td>
    <td>콘트롤의 텍스트를 바꿉니다.</td>
  </tr>
  <tr>
    <td><a href="CoordMode.htm">CoordMode</a></td>
    <td>다양한 명령어에 대하여 좌표 모드를 활성 창이나 화면에 상대적으로 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Cos">Cos()</a></td>
    <td><em>숫자</em>의 삼각함수 코사인을 돌려줍니다 .</td>
  </tr>
  <tr>
    <td><a href="Critical.htm">Critical</a></td>
    <td><a href="../misc/Threads.htm">현재 쓰레드</a>가 다른 스레드에 인터럽트를 당하지 않도록 방지하거나, 인터럽트 되도록 허용합니다.</td>
  </tr>
  <tr>
    <td><a href="DetectHiddenText.htm">DetectHiddenText</a></td>
    <td>창에서 보이지 않는 텍스트를 &quot;보여줄지 말지&quot;  결정합니다. 창을 찾는 목적에 사용할 수 있습니다. 이 명령어는  IfWinExist와 WinActivate 같은 명령어에 영향을 미칩니다.</td>
  </tr>
  <tr>
    <td><a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></td>
    <td>보이지 않은 창을 스크립트에 &quot;보여줄지 말지&quot; 결정합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="DllCall.htm">DllCall()</a></td>
    <td>표준 Windows API 함수와 같은, DLL 안의 함수를 호출합니다.</td>
  </tr>
  <tr>
    <td><a href="Drive.htm">Drive</a></td>
    <td>CD 드라이브나 DVD 드라이브의 트레이를 꺼내거나 넣습니다. 또는 드라이브의 볼륨 라벨을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="DriveGet.htm">DriveGet</a></td>
    <td>컴퓨터의 드라이브에 관하여 다양한 유형의 정보를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="DriveSpaceFree.htm">DriveSpaceFree</a></td>
    <td>드라이브의 여유 공간을 메가 바이트 단위로 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="Edit.htm">Edit</a></td>
    <td>현재 스크립트를 편집하기 위해 연관 편집기에 엽니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Else.htm">Else</a></td>
    <td>IF-서술문이 FALSE로 평가되면 수행할 명령어(들)을 지정합니다. 명령어가 두 개 이상 존재하면, <a href="Block.htm">블록</a> (괄호)에 둘러 싸 넣으십시오.</td>
  </tr>
  <tr>
    <td class="larger"><a href="EnvAdd.htm">EnvAdd</a></td>
    <td>주어진 값을 <a href="../Variables.htm">변수</a>에 더해 자기 자신에 할당합니다. (<a href="FileSetTime.htm#YYYYMMDD">날짜-시간</a> 값에서 더하거나 뺄 수도 있습니다). 다음과 동등합니다: <code>Var += Value</code>.</td>
  </tr>
  <tr>
    <td><a href="EnvDiv.htm">EnvDiv</a></td>
    <td><a href="../Variables.htm">변수</a>를 주어진 값으로 나누어서 자기 자신에 할당합니다: <code>Var /= Value</code>.</td>
  </tr>
  <tr>
    <td><a href="EnvGet.htm">EnvGet</a></td>
    <td>환경 변수를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="EnvMult.htm">EnvMult</a></td>
    <td><a href="../Variables.htm">변수</a>를 주어진 값만큼 곱해서 자기 자신에 할당합니다. 다음과 동등합니다: <code>Var *= Value</code>.</td>
  </tr>
  <tr>
    <td><a href="EnvSet.htm">EnvSet</a></td>
    <td>환경에 담긴 <a href="../Variables.htm">변수</a>에 값을 씁니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="EnvSub.htm">EnvSub</a></td>
    <td>주어진 값을 <a href="../Variables.htm">변수</a>에서 빼서 자기 자신에 할당합니다 (<a href="FileSetTime.htm#YYYYMMDD">날짜-시간</a> 값을 비교하는 데에도 사용할 수 있습니다). 다음과 동등합니다: <code>Var -= Value</code>.</td>
  </tr>
  <tr>
    <td><a href="EnvUpdate.htm">EnvUpdate</a></td>
    <td>OS는 물론 실행 중인 모든 어플리케이션에 <a href="../Variables.htm">환경 변수</a>가 바뀌었음을 고지합니다.</td>
  </tr>
  <tr>
    <td><a href="Exit.htm">Exit</a></td>
    <td><a href="../misc/Threads.htm">현재 쓰레드</a>를 빠져 나오거나 (스크립트가 <a href="_Persistent.htm">영속적</a>이 아니고 핫키도 전혀 없다면) 전체 스크립트를 끝냅니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="ExitApp.htm">ExitApp</a></td>
    <td>스크립트를 무조건 종료합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Exp">Exp()</a></td>
    <td><em>e</em> (대략 2.71828182845905)를 <em>N</em> 만큼 제곱해서 돌려줍니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="FileAppend.htm">FileAppend</a></td>
    <td>텍스트를 파일 끝에 씁니다 (필요하면, 먼저 파일을 생성합니다).</td>
  </tr>
  <tr>
    <td><a href="FileCopy.htm">FileCopy</a></td>
    <td>파일을 복사합니다.</td>
  </tr>
  <tr>
    <td><a href="FileCopyDir.htm">FileCopyDir</a></td>
    <td>폴더를 복사합니다. 그의 하위 폴더와 파일도 함께 복사됩니다 (xcopy와 유사).</td>
  </tr>
  <tr>
    <td><a href="FileCreateDir.htm">FileCreateDir</a></td>
    <td>폴더를 생성합니다.</td>
  </tr>
  <tr>
    <td><a href="FileCreateShortcut.htm">FileCreateShortcut</a></td>
    <td>단축 파일을 생성합니다 (.lnk).</td>
  </tr>
  <tr>
    <td class="larger"><a href="FileDelete.htm">FileDelete</a></td>
    <td>파일을 삭제합니다.</td>
  </tr>
  <tr>
    <td><a href="FileEncoding.htm">FileEncoding</a></td>
    <td><a href="FileRead.htm">FileRead</a>, <a href="FileReadLine.htm">FileReadLine</a>, <a href="LoopReadFile.htm">Loop Read</a>, <a href="FileAppend.htm">FileAppend</a>, 그리고 <a href="FileOpen.htm">FileOpen</a>에 대하여 기본 파일 인코딩을 설정합니다.<br><i>다음도 참조하십시오:</i> <a href="../AHKL_Features.htm#enc">텍스트 인코딩</a></td>
  </tr>
  <tr>
    <td><a href="FileInstall.htm">FileInstall</a></td>
    <td>지정한 파일을 스크립트의 <a href="../Scripts.htm#ahk2exe">컴파일 버전</a>에 포함시킵니다.</td>
  </tr>
  <tr>
    <td><a href="FileGetAttrib.htm">FileGetAttrib</a></td>
    <td>파일이나 폴더가 읽기 전용인지, 숨은 파일인지 등등의 속성을 보고합니다.</td>
  </tr>
  <tr>
    <td><a href="FileGetShortcut.htm">FileGetShortcut</a></td>
    <td>단축 파일에 관한 정보를 열람합니다(.lnk). 예를 들어 그의 목표 파일.</td>
  </tr>
  <tr>
    <td><a href="FileGetSize.htm">FileGetSize</a></td>
    <td>파일의 크기를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="FileGetTime.htm">FileGetTime</a></td>
    <td>파일이나 폴더의 날짜시간 도장을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="FileGetVersion.htm">FileGetVersion</a></td>
    <td>파일의 버전을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="FileMove.htm">FileMove</a></td>
    <td>파일을 이동하거나 이름을 바꿉니다.</td>
  </tr>
  <tr>
    <td><a href="FileMoveDir.htm">FileMoveDir</a></td>
    <td>폴더를 그의 하위 폴더 파일과 함께 이동합니다. 폴더 이름을 바꿀 수도 있습니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="FileOpen.htm">FileOpen</a></td>
    <td>객체-지향적 파일 I/O를 제공합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="FileRead.htm">FileRead</a></td>
    <td>파일의 내용을 <a href="../Variables.htm">변수</a> 안으로 읽어 들입니다.</td>
  </tr>
  <tr>
    <td><a href="FileReadLine.htm">FileReadLine</a></td>
    <td>지정된 줄을 파일로부터 읽어 그 텍스트를 <a href="../Variables.htm">변수</a>에 저장합니다.</td>
  </tr>
  <tr>
    <td><a href="FileRecycle.htm">FileRecycle</a></td>
    <td>파일이나 디렉토리를 휴지통으로 보냅니다.</td>
  </tr>
  <tr>
    <td><a href="FileRecycleEmpty.htm">FileRecycleEmpty</a></td>
    <td>휴지통을 비웁니다.</td>
  </tr>
  <tr>
    <td><a href="FileRemoveDir.htm">FileRemoveDir</a></td>
    <td>폴더를 삭제합니다.</td>
  </tr>
  <tr>
    <td height="14" class="larger"><a href="FileSelectFile.htm">FileSelectFile</a></td>
    <td height="14">사용자가 파일을 열거나 저장할 수 있도록 표준 대화상자를 보여줍니다.</td>
  </tr>
  <tr>
    <td><a href="FileSelectFolder.htm">FileSelectFolder</a></td>
    <td><p>사용자가 폴더를 선택할 수 있도록 표준 대화상자를 보여줍니다.</p></td>
  </tr>
  <tr>
    <td><a href="FileSetAttrib.htm">FileSetAttrib</a></td>
    <td>파일이나 폴더의 속성을 변경합니다. 와일드카드를 지원합니다.</td>
  </tr>
  <tr>
    <td><a href="FileSetTime.htm">FileSetTime</a></td>
    <td>파일이나 폴더의 날짜시간 도장을 변경합니다. 와일드카드를 지원합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Finally.htm">Finally</a></td>
    <td><a href="Try.htm">Try</a> 서술문이 끝나면,  한 블록의 코드가 언제나 확실하게 실행되도록 합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Floor">Floor()</a></td>
    <td><em>숫자</em>를 가장 가까운 정수로 버림한 다음 돌려줍니다 ( .00을 버림).</td>
  </tr>
  <tr>
    <td class="larger"><a href="For.htm">For</a></td>
    <td>객체 안의 키-값 한 쌍마다 일련의 명령어를 반복합니다.</td>
  </tr>
  <tr>
    <td><a href="Format.htm">Format</a></td>
    <td>가변 개수의 입력 값을 포맷 문자열에 맞게 포맷합니다.</td>
  </tr>
  <tr>
    <td><a href="FormatTime.htm">FormatTime</a></td>
    <td><a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a> 타임스탬프를 지정된 날짜/시간 형식으로 변형합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Func">Func()</a></td>
    <td>함수를 가리키는 <a href="../Objects.htm#Function_References">참조주소</a>를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#GetKeyName">GetKeyName()</a><br><a href="../Functions.htm#GetKeyName">GetKeyVK()</a><br><a href="../Functions.htm#GetKeyName">GetKeySC()</a></td>
    <td>가상 키 코드 또는 키의 스캔 코드의 이름 또는 텍스트를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="GetKeyState.htm">GetKeyState</a></td>
    <td>키보드 키나 마우스/조이스틱 버튼이 눌러 있는지 뗀 상태인지 점검합니다. 또 조이스틱의 상태를 열람합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Gosub.htm">Gosub</a></td>
    <td>지정된 라벨로 점프해서 <a href="Return.htm">Return</a>을 만날 때까지 실행을 계속합니다.</td>
  </tr>
  <tr>
    <td><a href="Goto.htm">Goto</a></td>
    <td>지정된 라벨로 점프해 실행을 계속합니다.</td>
  </tr>
  <tr>
    <td><a href="GroupActivate.htm">GroupActivate</a></td>
    <td><a href="GroupAdd.htm">GroupAdd</a>로 정의된 창 그룹에서 다음 창을 활성화합니다.</td>
  </tr>
  <tr>
    <td><a href="GroupAdd.htm">GroupAdd</a></td>
    <td>창을 창 그룹에 추가합니다. 필요하면 창 그룹을 생성합니다.</td>
  </tr>
  <tr>
    <td><a href="GroupClose.htm">GroupClose</a></td>
    <td>바로 전에 <a href="GroupActivate.htm">GroupActivate</a>나 <a href="GroupDeactivate.htm">GroupDeactivate</a>에 의하여 활성화되었던 활성 창을 닫습니다 . 
	그 다음에 연속적으로 그 다음 창을 활성화합니다. 그룹에 있는 모든 창을 닫을 수도 있습니다.</td>
  </tr>
  <tr>
    <td><a href="GroupDeactivate.htm">GroupDeactivate</a></td>
    <td><a href="GroupActivate.htm">GroupActivate</a>와 비슷합니다. 단 그룹에 <strong>없는</strong> 다음 창을 활성화한다는 점이 다릅니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Gui.htm">Gui</a></td>
    <td>창과 콘트롤을 생성하고 관리합니다. 만든 창은 데이터 입력 폼이나 맞춤 사용자 인터페이스에 사용할 수 있습니다.</td>
  </tr>
  <tr>
    <td><a href="GuiControl.htm">GuiControl</a></td>
    <td>구이 창의 콘트롤에 다양한 변경을 합니다.</td>
  </tr>
  <tr>
    <td><a href="GuiControlGet.htm">GuiControlGet</a></td>
    <td>구이 탕의 콘트롤에 관하여 다양한 유형의 정보를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="Hotkey.htm">Hotkey</a></td>
    <td>스크립트가 실행 중인 동안, 핫키를 생성, 변경, 활성화, 또는 불능화합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="IfEqual.htm">if</a></td>
    <td><a href="../Variables.htm">변수</a>를 변수에 비교해 TRUE로 평가되면 수행할 명령어(들)을 지정합니다.  두 개 이상 명령어가 존재하면,  <a href="Block.htm">블록</a> (반괄호) 안에 싸 넣으십시오.</td>
  </tr>
  <tr>
    <td class="larger"><a href="IfExpression.htm">if (expression)</a></td>
    <td><a href="../Variables.htm#Expressions">표현식</a>이 TRUE로 평가될 때 수행할 명령어(들)을 지정합니다.</td>
  </tr>
  <tr>
    <td><a href="IfBetween.htm">If var [not] between</a></td>
    <td><a href="../Variables.htm">변수</a>의 내용이 숫자 순서로 또는 알파벳 순서로 두 값 사이에 (포함) 있는지 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="IfIn.htm">If var [not] in/contains MatchList</a></td>
    <td><a href="../Variables.htm">변수</a>의 내용이 리스트 안의 항목에 부합하는지 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="IfIs.htm">If var is [not] type</a></td>
    <td><a href="../Variables.htm">변수</a>의 내용이 숫자인지, 대문자인지 등등을 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="IfEqual.htm">IfEqual / IfNotEqual</a></td>
    <td><a href="../Variables.htm">변수가</a>가 값과 같은지 비교합니다. 다음과 동등합니다: <code>if Var = Value</code> | <code>if Var &lt;&gt; Value</code>.</td>
  </tr>
  <tr>
    <td class="larger"><a href="IfExist.htm">IfExist</a> / 
    <a href="../Functions.htm#FileExist">FileExist()</a></td>
    <td>파일이나 폴더가 존재하는지 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="IfEqual.htm">IfGreater / IfGreaterOrEqual</a></td>
    <td><a href="../Variables.htm">변수</a>를 값에 비교합니다. 다음과 동등합니다: <code>if Var &gt; Value</code> | <code>if Var &gt;= Value</code>.</td>
  </tr>
  <tr>
    <td class="larger"><a href="IfInString.htm">IfInString</a> / <a href="../Functions.htm#InStr">InStr()</a></td>
    <td><a href="../Variables.htm">변수</a>에 지정된 문자열이 포함되어 있는지 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="IfEqual.htm">IfLess / IfLessOrEqual</a></td>
    <td><a href="../Variables.htm">변수</a>를 값에 비교합니다. 다음과 동등합니다: <code>if Var &lt; Value</code> | <code>if Var &lt;= Value</code>.</td>
  </tr>
  <tr>
    <td class="larger"><a href="IfMsgBox.htm">IfMsgBox</a></td>
    <td>가장 최근의 <a href="MsgBox.htm">MsgBox</a> 명령을 수행하는 동안 사용자가 어느 버튼을 눌렀는지 점검합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinActive.htm">IfWinActive / IfWinNotActive</a><br></td>
    <td>지정된 창이 존재하는지 그리고 현재 활성 상태 (전경)인지 점검합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinExist.htm">IfWinExist / IfWinNotExist</a><br></td>
    <td>지정된 창이 존재하는지 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="ImageSearch.htm">ImageSearch</a></td>
    <td>화면에서 이미지를 검색합니다.</td>
  </tr>
  <tr>
    <td><a href="IniDelete.htm">IniDelete</a></td>
    <td>표준 형식의 .ini 파일로부터 값을 지웁니다.</td>
  </tr>
  <tr>
    <td><a href="IniRead.htm">IniRead</a></td>
    <td>표준 형식의 .ini 파일로부터 값을 읽습니다.</td>
  </tr>
  <tr>
    <td><a href="IniWrite.htm">IniWrite</a></td>
    <td>표준 형식의 .ini 파일에 값을 씁니다.</td>
  </tr>
  <tr>
    <td><a href="Input.htm">Input</a></td>
    <td>사용자가 문자열을 타자하기를 기다립니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="InputBox.htm">InputBox</a></td>
    <td>입력 박스를 보여주고 사용자가 문자열을 타자해 넣기를 요구합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#InStr">InStr()</a></td>
    <td>주어진 문자열이 <em>나타나는지</em> 왼쪽에서 오른쪽으로 검색합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#IsByRef">IsByRef()</a></td>
    <td>ByRef 매개변수에 값이 주어졌는지 결정합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#IsFunc">IsFunc()</a></td>
    <td>함수를 <a href="../Functions.htm#DynCall">동적으로 호출할 수 있는지</a> 알려줍니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#IsLabel">IsLabel()</a></td>
    <td>주어진 값이 라벨에 존재하는지 점검합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#IsObject">IsObject()</a></td>
    <td>값이 객체인지 결정합니다.</td>
  </tr>
  <tr>
    <td><a href="KeyHistory.htm">KeyHistory</a></td>
    <td>스크립트 정보 그리고 가장 최근의 키눌림과 마우스 클릭의 이력을 보여줍니다.</td>
  </tr>
  <tr>
    <td><a href="KeyWait.htm">KeyWait</a></td>
    <td>키나 마우스/조이스틱 버튼을 누를 때까지 또는 뗄 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td><a href="ListHotkeys.htm">ListHotkeys</a></td>
    <td>현재 스크립트가 사용 중인 핫키들을 화면에 보여줍니다. 그들의 서브루틴이 현재 실행 중인지, 그리고 <a href="_InstallKeybdHook.htm">키보드 갈고리</a>나 <a href="_InstallMouseHook.htm">마우스 갈고리</a>를 사용중인지 아닌지 알려줍니다.</td>
  </tr>
  <tr>
    <td><a href="ListLines.htm">ListLines</a></td>
    <td>가장 최근에 실행된 스크립트 줄을 화면에 보여줍니다.</td>
  </tr>
  <tr>
    <td><a href="ListVars.htm">ListVars</a></td>
    <td>스크립트의 <a href="../Variables.htm">변수들</a>을 보여줍니다: 이름과 현재 내용.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Log">Log()</a></td>
    <td><em>숫자</em>의 상용 로그를 돌려줍니다 (밑수 10).</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Ln">Ln()</a></td>
    <td><em>숫자</em>의 자연 로그를 돌려줍니다 (밑수 e).</td>
  </tr>
  <tr>
    <td class="larger"><a href="Loop.htm">Loop (보통)</a></td>
    <td>일련의 명령어들을 반복적으로 수행합니다: 지정된 횟수만큼 또는 <a href="Break.htm">break</a>를 만날 때까지.</td>
  </tr>
  <tr>
    <td><a href="LoopFile.htm">Loop (파일 &amp; 폴더)</a></td>
    <td>지정된 파일이나 폴더를 한 번에 하나씩 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="LoopParse.htm">Loop (문자열 파싱)</a></td>
    <td>문자열로부터 서브스트링(필드)를 한 번에 하나씩 파싱합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="LoopReadFile.htm">Loop (파일 내용 읽기)</a></td>
    <td>텍스트 파일에서 줄을 한 번에 한 줄씩 열람합니다 (<a href="FileReadLine.htm">FileReadLine</a>보다 수행성능이 더 좋습니다).</td>
  </tr>
  <tr>
    <td><a href="LoopReg.htm">Loop (레지스트리)</a></td>
    <td>지정된 레지스트리 서브키의 내용을 한 번에 하나씩 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="Menu.htm">Menu</a></td>
    <td>메뉴와 메뉴 항목을 생성, 삭제, 변경 그리고 보여줍니다. 트레이 아이콘과 그의 툴팁을 변경합니다. <a href="../Scripts.htm#ahk2exe">컴파일된 스크립트</a>의 메인 창을 열지 말지 제어합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Mod">Mod()</a></td>
    <td>나머지(Modulo) 연산입니다. <em>피젯수(Dividend)</em>를 <em>젯수(Divisor)</em>로 나누고 나머지를 돌려줍니다.</td>
  </tr>
  <tr>
    <td><a href="MouseClick.htm">MouseClick</a></td>
    <td>마우스 버튼을 클릭하거나 누릅니다. 또는 마우스 휠을 돌립니다. 주의: <a href="Click.htm">Click 명령어</a>가 일반적으로 더 유연하고 사용하기가 더 쉽습니다.</td>
  </tr>
  <tr>
    <td><a href="MouseClickDrag.htm">MouseClickDrag</a></td>
    <td>지정된 마우스 버튼을 클릭하고 누릅니다. 마우스를 목표 좌표로 이동합니다. 그리고 마우스를 뗍니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="MouseGetPos.htm">MouseGetPos</a></td>
    <td>마우스 커서의 현재 위치를 열람합니다. 그리고 선택적으로 어느 창과 콘트롤 위에 있는지 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="MouseMove.htm">MouseMove</a></td>
    <td>마우스 커서를 이동합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="MsgBox.htm">MsgBox</a></td>
    <td>지정된 텍스트를 작은 창 안에 보여줍니다. 안에 버튼이 들어 있습니다 (예를 들어 Yes 그리고 No).</td>
  </tr>
  <tr>
    <td><a href="NumGet.htm">NumGet()</a></td>
    <td>지정된 주소+오프셋에 저장된 이진 숫자를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="NumPut.htm">NumPut()</a></td>
    <td>지정된 주소+오프셋에 이진 형태의 숫자를 저장합니다.</td>
  </tr>
  <tr>
    <td><a href="OnExit.htm">OnExit</a></td>
    <td>스크립트가 종료할 대 자동으로 실행할 <a href="Gosub.htm">서브루틴</a>을 지정합니다.</td>
  </tr>
  <tr>
    <td><a href="OnMessage.htm">OnMessage()</a></td>
    <td>스크립트가 지정된 메시지를 받을 때 자동으로 호출할 <a href="../Functions.htm">함수</a>를 지정합니다.</td>
  </tr>
  <tr>
    <td><a href="OutputDebug.htm">OutputDebug</a></td>
    <td>문자열을 (있다면) 디버거에 보내 보여줍니다.</td>
  </tr>
  <tr>
    <td><a href="Pause.htm">Pause</a></td>
    <td>스크립트의 <a href="../misc/Threads.htm">현재 쓰레드</a>를 정지합니다.</td>
  </tr>
  <tr>
    <td><a href="PixelGetColor.htm">PixelGetColor</a></td>
    <td>지정된 좌표에서 픽셀의 색을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="PixelSearch.htm">PixelSearch</a></td>
    <td>화면 구역을 검색해 지정된 색을 가진 픽셀을 찾습니다.</td>
  </tr>
  <tr>
    <td><a href="PostMessage.htm">PostMessage</a></td>
    <td>메시지를 창이나 콘트롤의 메시지 큐에 넣습니다.</td>
  </tr>
  <tr>
    <td><a href="Process.htm">Process</a></td>
    <td>프로세스에 다음 연산 중 하나를 수행합니다: 존재하는지 점검합니다; 우선순위를 변경합니다; 닫습니다; 끝나기를 기다립니다.</td>
  </tr>
  <tr>
    <td><a href="Progress.htm">Progress</a></td>
    <td>진척 사항 바를 담고 있는 창을 생성하거나 갱신합니다.</td>
  </tr>
  <tr>
    <td><a href="Random.htm">Random</a></td>
    <td>의사-무작위 수를 생성합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="RegExMatch.htm">RegExMatch()</a></td>
    <td>문자열에 패턴(정규 표현식)을 담을지 말지 결정합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="RegExReplace.htm">RegExReplace()</a></td>
    <td>문자열 안에서 패턴 (정규 표현식)에 부합하는 것들을 교체합니다.</td>
  </tr>
  <tr>
    <td><a href="RegDelete.htm">RegDelete</a></td>
    <td>레지스트리에서 서브키나 값을 삭제합니다.</td>
  </tr>
  <tr>
    <td><a href="RegRead.htm">RegRead</a></td>
    <td>값을 레지스트리에서 읽습니다.</td>
  </tr>
  <tr>
    <td><a href="RegWrite.htm">RegWrite</a></td>
    <td>값을 레지스트리에 씁니다.</td>
  </tr>
  <tr>
    <td><a href="RegisterCallback.htm">RegisterCallback()</a></td>
    <td>호출 될 때 머신-코드 주소를 생성해서, 그 호출을 스크립트의 <a href="../Functions.htm">함수</a>로 방향전환합니다.</td>
  </tr>
  <tr>
    <td><a href="Reload.htm">Reload</a></td>
    <td>현재 실행중인 스크립트의 실체를 새로운 실체로 교체합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Return.htm">Return</a></td>
    <td>서브루틴으로부터 이전에 실행을 점프했던 곳으로 돌아갑니다. <a href="../Functions.htm">함수-호출</a>, <a href="Gosub.htm">Gosub</a>, <a href="../Hotkeys.htm">핫키</a> 활성화, <a href="GroupActivate.htm">GroupActivate</a>, 기타 등등의 방법으로 점프했던 곳으로 돌아갑니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Round">Round()</a></td>
    <td>
	<em>N</em>이 생략되거나 0이면, <em>Number</em>는 가장 가까운 정수로 버림됩니다. <em>N</em>이 양수이면, <em>Number</em>는<em>N</em>개의 십진 자리로 버림됩니다. <em>N</em>이 음수이면, <em>Number</em>는 소수점 왼쪽으로 <em>N</em> 자리수 만큼 버림됩니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Run.htm">Run</a></td>
    <td>외부 프로그램을 실행합니다.</td>
  </tr>
  <tr>
    <td><a href="RunAs.htm">RunAs</a></td>
    <td>이 다음부터 <a href="Run.htm">Run</a>과 <a href="Run.htm">RunWait</a>를 사용하기 위해 사용자 신용장 세트를 지정합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Run.htm">RunWait</a></td>
    <td>외부 프로그램을 실행하고 끝날 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Send.htm">Send</a> / <a href="Send.htm#SendRaw">SendRaw</a> / <a href="Send.htm#SendInput">SendInput</a> / <a href="Send.htm#SendPlay">SendPlay</a></td>
    <td>시률레이트된 키눌림과 마우스 클릭을 <a href="WinActivate.htm">활성</a> 창에 전송합니다.</td>
  </tr>
  <tr>
    <td><a href="SendLevel.htm">SendLevel</a></td>
    <td>인위적인 키눌림과 마우스 이벤트를 핫키와 핫스트링이 무시할지 말지 제어합니다.</td>
  </tr>
  <tr>
    <td><a href="PostMessage.htm">SendMessage</a></td>
    <td>메시지를 창이나 콘트롤에 전송하고 승인을 기다립니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="SendMode.htm">SendMode</a></td>
    <td>기본 (SendEvent) 값이 아니라, <a href="Send.htm">Send</a>를 SendInput이나 SendPlay와 동일하게 만듭니다. 또Click 그리고 MouseMove/Click/Drag가 지정된 메쏘드를 사용하도록 만듭니다.</td>
  </tr>
  <tr>
    <td><a href="SetBatchLines.htm">SetBatchLines</a></td>
    <td>얼마나 빨리 스크립트를 실행할지 결정합니다 (CPU 이용에 영향을 미칩니다).</td>
  </tr>
  <tr>
    <td><a href="SetNumScrollCapsLockState.htm">SetCapslockState</a></td>
    <td>Capslock 키의 상태를 설정합니다.강제로 온 또는 오프 상태를 유지할 수 있습니다.</td>
  </tr>
  <tr>
    <td><a href="SetControlDelay.htm">SetControlDelay</a></td>
    <td>각 콘트롤-변경 명령어 다음에 지연 시간을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a></td>
    <td>마우스 속도를 설정합니다. <a href="Click.htm">Click</a> 그리고 <a href="MouseMove.htm">MouseMove</a>/<a href="MouseClick.htm">Click</a>/<a href="MouseClickDrag.htm">Drag</a>에 지정되어 있지 않을 경우 유용합니다.</td>
  </tr>
  <tr>
    <td><a href="SetEnv.htm">SetEnv (Var = Value)</a></td>
    <td>지정된 값을 <a href="../Variables.htm">변수</a>에 할당합니다.</td>
  </tr>
  <tr>
    <td><a href="SetFormat.htm">SetFormat</a></td>
    <td>수학 연산으로 생산돈 정수와 부동 소수점 수의 형식을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="SetKeyDelay.htm">SetKeyDelay</a></td>
    <td><a href="Send.htm">Send</a>나 <a href="ControlSend.htm">ControlSend</a>로 키를 누른 후에 지연될 시간을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="SetMouseDelay.htm">SetMouseDelay</a></td>
    <td>마우스 이동이나 클릭 후에 지연될 시간을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="SetNumScrollCapsLockState.htm">SetNumlockState</a></td>
    <td>Numlock 키의 상태를 설정합니다. 강제로 온 또는 오프 상태를 유지할 수 있습니다.</td>
  </tr>
  <tr>
    <td><a href="SetNumScrollCapsLockState.htm">SetScrollLockState</a></td>
    <td>Scrolllock 키의 상태를 설정합니다. 강제로 온 또는 오프 상태를 유지할 수 있습니다.</td>
  </tr>
  <tr>
    <td><a href="SetRegView.htm">SetRegView</a></td>
    <td>32-비트 스크립트에서 레지스트리 명령어가 64-비트 레지스트리 뷰에 접근하는 것을 그리고 그 반대를 허용합니다.</td>
  </tr>
  <tr>
    <td><a href="SetStoreCapslockMode.htm">SetStoreCapslockMode</a></td>
    <td><a href="Send.htm">Send</a> 후에 CapsLock의 상태를 복구할지 말지 결정합니다 .</td>
  </tr>
  <tr>
    <td class="larger"><a href="SetTimer.htm">SetTimer</a></td>
    <td>서브루틴이 자동으로 그리고 반복적으로 지정된 시간 간격마다 기동되도록 만듭니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="SetTitleMatchMode.htm">SetTitleMatchMode</a></td>
    <td><a href="WinWait.htm">WinWait</a>와 같은 명령어와 같이, WinTitle 매개변수의 부합 행위를 설정합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="SetWinDelay.htm">SetWinDelay</a></td>
    <td><a href="WinActivate.htm">WinActivate</a>와 같이, 각 창 명령어 다음에 지연 시간을 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="SetWorkingDir.htm">SetWorkingDir</a></td>
    <td>스크립트의 현재 작업 디렉토리를 변경합니다.</td>
  </tr>
  <tr>
    <td><a href="Shutdown.htm">Shutdown</a></td>
    <td>시스템을 닫거나, 재시작하거나 또는 로그오프 합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Sin">Sin()</a></td>
    <td><em>Number</em>의 삼각 사인 값을 돌려줍니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Sleep.htm">Sleep</a></td>
    <td>지정된 시간 동안 기다린 다음 계속 진행합니다.</td>
  </tr>
  <tr>
    <td><a href="Sort.htm">Sort</a></td>
    <td>변수의 내용을 알파벳, 숫자, 또는 무작위 순서로 정렬합니다 (선택적으로 중복을 제거합니다).</td>
  </tr>
  <tr>
    <td><a href="SoundBeep.htm">SoundBeep</a></td>
    <td>PC 스피커로 톤을 방출합니다.</td>
  </tr>
  <tr>
    <td><a href="SoundGet.htm">SoundGet</a></td>
    <td>사운드 장치로부터 다양한 설정을 열람합니다 (마스터 음소거, 마스터 볼륨 등등.)</td>
  </tr>
  <tr>
    <td><a href="SoundGetWaveVolume.htm">SoundGetWaveVolume</a></td>
    <td>사운드 장치로부터 웨이브 출력 볼륨을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="SoundPlay.htm">SoundPlay</a></td>
    <td>사운드, 비디오, 또는 기타 지원되는 파일 유형을 연주합니다.</td>
  </tr>
  <tr>
    <td><a href="SoundSet.htm">SoundSet</a></td>
    <td>사운드 장치의 다양한 설정을 변경합니다 (마스터 음소거, 마스터 볼륨 등등.)</td>
  </tr>
  <tr>
    <td><a href="SoundSetWaveVolume.htm">SoundSetWaveVolume</a></td>
    <td>사운드 장치를 위해 웨이브 출력 볼륨을 변경합니다.</td>
  </tr>
  <tr>
    <td><a href="Progress.htm">SplashImage</a></td>
    <td>JPG, GIF, 또는 BMP 이미지를 담고 있는 창을 만들거나 갱신합니다.</td>
  </tr>
  <tr>
    <td><a href="SplashTextOn.htm">SplashTextOn</a></td>
    <td>맞춤 가능한 텍스트 팝업 창을 생성합니다.</td>
  </tr>
  <tr>
    <td><a href="SplashTextOn.htm">SplashTextOff</a></td>
    <td>위의 창을 닫습니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="SplitPath.htm">SplitPath</a></td>
    <td>파일 이름이나 URL을 이름, 디렉토리, 확장자, 그리고 드라이브로 가릅니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Sqrt">Sqrt()</a></td>
    <td><em>Number</em>의 평방근을 돌려줍니다.</td>
  </tr>
  <tr>
    <td><a href="StatusBarGetText.htm">StatusBarGetText</a></td>
    <td>표준 상태 바 콘트롤으로부터 텍스트를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="StatusBarWait.htm">StatusBarWait</a></td>
    <td>차의 상태 바에 지정된 문자열이 들어올 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td><a href="StrPutGet.htm">StrPut() / StrGet()</a></td>
    <td>문자열을 메모리 주소로 복사하거나 복사해 옵니다. 선택적으로 코드 페이지에 맞게 변환합니다.</td>
  </tr>
  <tr>
    <td><a href="StringCaseSense.htm">StringCaseSense</a></td>
    <td>문자열 비교에 대소문자를 구분할지 결정합니다. (기본값은 &quot;대소문자를 구별하지 않습니다&quot;).</td>
  </tr>
  <tr>
    <td class="larger"><a href="StringGetPos.htm">StringGetPos</a> / <a href="../Functions.htm#InStr">InStr()</a></td>
    <td>문자열 안에서 지정된 부분문자열의 위치를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="StringLeft.htm">StringLeft</a></td>
    <td>문자열의 왼쪽으로부터 여러 문자를 열람합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="StringLen.htm">StringLen / StrLen()</a></td>
    <td>문자열에 들은 문자의 갯수를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="StringLower.htm">StringLower</a></td>
    <td>문자열을 소문자로 변환합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="StringMid.htm">StringMid</a> / <a href="../Functions.htm#SubStr">SubStr()</a></td>
    <td>문자열에서 지정된 위치로부터 하나 이상이 문자를 열람합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="StringReplace.htm">StringReplace</a></td>
    <td>지정된 부분문자열을 새 문자열로 교체합니다.</td>
  </tr>
  <tr>
    <td><a href="StringLeft.htm">StringRight</a></td>
    <td>문자열의 오른쪽으로부터 문자들을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="StringSplit.htm">StringSplit</a></td>
    <td>문자열을 지정된 가름자를 사용하여 부분 문자열 배열로 가릅니다.</td>
  </tr>
  <tr>
    <td><a href="StringTrimLeft.htm">StringTrimLeft</a></td>
    <td>문자열의 왼쪽으로부터 문자들을 제거합니다.</td>
  </tr>
  <tr>
    <td><a href="StringTrimLeft.htm">StringTrimRight</a></td>
    <td>문자열의 오른쪽으로부터 문자들을 제거합니다.</td>
  </tr>
  <tr>
    <td><a href="StringLower.htm">StringUpper</a></td>
    <td>문자열을 대문자로 변환합니다.</td>
  </tr>
  <tr>
    <td><a href="Suspend.htm">Suspend</a></td>
    <td>선택된 또는 모든 <a href="../Hotkeys.htm">핫키</a>와 <a href="../Hotstrings.htm">핫스트링</a>을 켜고 끕니다.</td>
  </tr>
  <tr>
    <td><a href="SysGet.htm">SysGet</a></td>
    <td>화면 해상도, 다중-모니터 정보, 시스템 객체의 크기, 그리고 기타 시스템 특성을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="../Functions.htm#Tan">Tan()</a></td>
    <td><em>Number</em>의 삼각 탄젠트를 돌려줍니다.</td>
  </tr>
  <tr>
    <td><a href="Thread.htm">Thread</a></td>
    <td><a href="../misc/Threads.htm">쓰레드</a>의 우선순위 또는 인터럽트 허용 여부를 설정합니다. 임시로 모든 <a href="SetTimer.htm">타이머</a>를 끌 수도 있습니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Throw.htm">Throw</a></td>
    <td>에러가 일어났다는 신호를 보냅니다. 이 신호는  <a href="Try.htm">try</a>-<a href="Catch.htm">catch</a> 서술문으로 잡을 수 있습니다.</td>
  </tr>
  <tr>
    <td><a href="ToolTip.htm">ToolTip</a></td>
    <td>언제나 최상위에 있는 창을 화면 어디든지 만듭니다.</td>
  </tr>
  <tr>
    <td><a href="Transform.htm">Transform</a></td>
    <td>잡다한 수학 기능, 비트별 연산, 그리고 ASCII/유니코드 변환 같은 작업을 수행합니다.</td>
  </tr>
  <tr>
    <td><a href="TrayTip.htm">TrayTip</a></td>
    <td>풍선 메시지를 트레이 아이콘 근처에 만듭니다.</td>
  </tr>
  <tr>
    <td><a href="Trim.htm">Trim</a></td>
    <td>문자열의 앞/뒤에서 문자들을 걷어냅니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Try.htm">Try</a></td>
    <td>하나 이상의 서술문 (명령어나 표현식)을 <a href="Throw.htm">throw</a> 명령어가 던지는 실행시간 에러와 예외로부터 보호합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="Until.htm">Until</a></td>
    <td>Loop 또는 For-회돌이에 조건을 적용합니다.</td>
  </tr>
  <tr>
    <td><a href="URLDownloadToFile.htm">UrlDownloadToFile</a></td>
    <td>인터넷으로부터 파일을 내려받습니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="SetEnv.htm">Var = value</a></td>
    <td>지정된 값을 <a href="../Variables.htm">변수</a>에 할당합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="SetExpression.htm">Var := expression</a></td>
    <td><a href="../Variables.htm#Expressions">표현식</a>을 평가해서 그 결과를 <a href="../Variables.htm">변수</a>에 저장합니다.</td>
  </tr>
  <tr>
    <td><a href="VarSetCapacity.htm">VarSetCapacity()</a></td>
    <td>변수의 가용 능력을 확대하거나 그의 메모리를 풀어줍니다. 보통, 이것은 <a href="DllCall.htm">DllCall</a>과 같이 비정상적인 상황에서만 필요합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="While.htm">While-loop</a></td>
    <td>지정된 <a href="../Variables.htm#Expressions">표현식</a>이 거짓으로 평가될 때까지 일련의 명령어를 반복적으로 실행합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinActivate.htm">WinActivate</a></td>
    <td>지정된 창을 활성화합니다 (전경 화면으로 만듭니다).</td>
  </tr>
  <tr>
    <td><a href="WinActivateBottom.htm">WinActivateBottom</a></td>
    <td><a href="WinActivate.htm">WinActivate</a>와 동일합니다. 단 최상단 창이 아니라 (가장 최근까지도 활성화되지 않은) 최하단 창을 활성화한다는 점이 다릅니다.</td>
  </tr>
  <tr>
    <td><a href="WinActive.htm">WinActive()</a></td>
    <td>활성창이 지정된 기준에 부합하면 그 유일한 ID (HWND)를 돌려줍니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinClose.htm">WinClose</a></td>
    <td>지정된 창을 닫습니다.</td>
  </tr>
  <tr>
  <td class="larger"><a href="WinExist.htm">WinExist()</a></td>
    <td>제일 처음 부합한 창의 유일한 ID (HWND)를 돌려줍니다.</td>
  </tr>
  <tr>
    <td><a href="WinGetActiveStats.htm">WinGetActiveStats</a></td>
    <td><a href="WinGetActiveTitle.htm">WinGetActiveTitle</a> 기능과 <a href="WinGetPos.htm">WinGetPos</a>기능을 하나의 명령어로 결합합니다.</td>
  </tr>
  <tr>
    <td><a href="WinGetActiveTitle.htm">WinGetActiveTitle</a></td>
    <td>활성 창의 제목을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="WinGetClass.htm">WinGetClass</a></td>
    <td>지정된 창의 클래스 이름을 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="WinGet.htm">WinGet</a></td>
    <td>지정된 창의 유일한 ID, 프로세스 ID, 프로세스 이름, 또는 그의 콘트롤 목록을 열람합니다. 또 지정된 기준에 부합하는 모든 창의 목록을 열람할 수도 있습니다.</td>
  </tr>
  <tr>
    <td><a href="WinGetPos.htm">WinGetPos</a></td>
    <td>지정된 창의 크기와 위치를 열람합니다.</td>
  </tr>
  <tr>
    <td><a href="WinGetText.htm">WinGetText</a></td>
    <td>지정된 창으로부터 텍스트를 열람합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinGetTitle.htm">WinGetTitle</a></td>
    <td>지정된 창의 제목을 열람합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinHide.htm">WinHide</a></td>
    <td>지정된 창을 감춥니다.</td>
  </tr>
  <tr>
    <td><a href="WinKill.htm">WinKill</a></td>
    <td>지정된 창을 강제로 닫습니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinMaximize.htm">WinMaximize</a></td>
    <td>지정된 창을 최대 크기로 확대합니다.</td>
  </tr>
  <tr>
    <td><a href="WinMenuSelectItem.htm">WinMenuSelectItem</a></td>
    <td>지정된 창의 메뉴 바에서 메뉴 항목을 요청합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinMinimize.htm">WinMinimize</a></td>
    <td>지정된 창을 태스크 바의 버튼으로 축소합니다.</td>
  </tr>
  <tr>
    <td><a href="WinMinimizeAll.htm">WinMinimizeAll</a></td>
    <td>모든 창을 최소화합니다.</td>
  </tr>
  <tr>
    <td><a href="WinMinimizeAll.htm">WinMinimizeAllUndo</a></td>
    <td>이전 <a href="WinMinimizeAll.htm">WinMinimizeAll</a>의 효과를 언두합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinMove.htm">WinMove</a></td>
    <td>지정된 창의 위치 / 크기를 변경합니다.</td>
  </tr>
  <tr>
    <td><a href="WinRestore.htm">WinRestore</a></td>
    <td>지정된 창이 최대화 또는 최소화 상태이면 원래대로 복구합니다.</td>
  </tr>
  <tr>
    <td><a href="WinSet.htm">WinSet</a></td>
    <td>지정된 창에 다양한 변경을 가할 수 있습니다. 예를 들어 &quot;항상 위에&quot; 그리고 투명도.</td>
  </tr>
  <tr>
    <td><a href="WinSetTitle.htm">WinSetTitle</a></td>
    <td>지정된 창의 제목을 바꿉니다.</td>
  </tr>
  <tr>
    <td><a href="WinShow.htm">WinShow</a></td>
    <td>지정된 창을 보여줍니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinWait.htm">WinWait</a></td>
    <td>지정된 창이 끝날 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinWaitActive.htm">WinWaitActive</a></td>
    <td>지정된 창이 활성화될 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinWaitClose.htm">WinWaitClose</a></td>
    <td>지정된 창이 존재하지 않을 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="WinWaitActive.htm">WinWaitNotActive</a></td>
    <td>지정된 창이 활성화되지 않을 때까지 기다립니다.</td>
  </tr>
  <tr>
    <td><a href="_ClipboardTimeout.htm">#ClipboardTimeout</a></td>
    <td>첫 시도가 실패할 때 클립보드에 얼마나 오랫 동안 접근을 시도할지 변경합니다.</td>
  </tr>
  <tr>
    <td><a href="_CommentFlag.htm">#CommentFlag</a></td>
    <td>스크립트의 주석 심볼을 쌍반점에서 다른 문자열로 바꿉니다.</td>
  </tr>
  <tr>
    <td><a href="_ErrorStdOut.htm">#ErrorStdOut</a></td>
    <td>스크립트의 기동을 방해하는 구문 에러를 대화상자에 보여주는 대신에 표준 출력(stdout)으로 보냅니다.</td>
  </tr>
  <tr>
    <td><a href="_EscapeChar.htm">#EscapeChar</a></td>
    <td>스크립트의 피신 문자를 바꿉니다 (예를 들어: 역사선 vs. 액센트).</td>
  </tr>
  <tr>
    <td><a href="_HotkeyInterval.htm">#HotkeyInterval</a></td>
    <td><a href="_MaxHotkeysPerInterval.htm">#MaxHotkeysPerInterval</a>과 함께, <a href="../Hotkeys.htm">핫키</a> 활성화 비율을 지정합니다. 이를 넘어서면 경고 대화상자가 나타납니다.</td>
  </tr>
  <tr>
    <td><a href="_HotkeyModifierTimeout.htm">#HotkeyModifierTimeout</a></td>
    <td><a href="../Hotkeys.htm">핫키</a> 수식자의 행위에 영향을 미칩니다: CTRL, ALT, WIN, 그리고 SHIFT.</td>
  </tr>
  <tr>
    <td><a href="_Hotstring.htm">#Hotstring</a></td>
    <td><a href="../Hotstrings.htm">핫스트링</a> 옵션이나 종료 문자를 바꿉니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="_If.htm">#If</a></td>
    <td><a href="_IfWinActive.htm">#IfWinActive</a>와 비슷하지만, 어떤 표현식에도 작동합니다.</td>
  </tr>
  <tr>
    <td><a href="_IfTimeout.htm">#IfTimeout</a></td>
    <td>#If 표현식 한 줄을 평가하는 데 소비할 최대 시간을 설정합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="_IfWinActive.htm">#IfWinActive / #IfWinExist</a></td>
    <td>문맥-감지 <a href="../Hotkeys.htm">핫키</a>와 <a href="../Hotstrings.htm">핫스트링</a>을 생성합니다. 문맥 감지 핫키는 활성화되어 있는 창의 종류에 따라 또는 존재 여부에 따라 다른 행위를 수행합니다.</td>
  </tr>
  <tr>
    <td><a href="_Include.htm">#Include</a></td>
    <td>스크립트는 마치 지정된 파일의 내용이 지정한 위치에 정확하게 존재하는 듯 행동합니다.</td>
  </tr>
  <tr>
    <td><a href="_InputLevel.htm">#InputLevel</a></td>
    <td>핫키와 핫스트링이 어느 인위적인 키보드와 마우스 이벤트를 무시할지 제어합니다.</td>
  </tr>
  <tr>
    <td><a href="_InstallKeybdHook.htm">#InstallKeybdHook</a></td>
    <td>키보드 갈고리를 무조건 설치합니다.</td>
  </tr>
  <tr>
    <td><a href="_InstallMouseHook.htm">#InstallMouseHook</a></td>
    <td>마우스 갈고리를 무조건 설치합니다.</td>
  </tr>
  <tr>
    <td><a href="_KeyHistory.htm">#KeyHistory</a></td>
    <td><a href="KeyHistory.htm">KeyHistory</a> 창에 보여주는 키보드와 마우스 이벤트의 최대 개수를 설정합니다.  0으로 설정하면 키 이력을 보여주지 않습니다.</td>
  </tr>
  <tr>
    <td><a href="../Scripts.htm#LTrim">#LTrim</a></td>
    <td>계속 섹션에서 들여쓰기를 다듬을지 여부를 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="_MaxHotkeysPerInterval.htm">#MaxHotkeysPerInterval</a></td>
    <td><a href="_HotkeyInterval.htm">#HotkeyInterval</a>과 함께, <a href="../Hotkeys.htm">핫키</a>의 활성화 비율을 설정합니다. 이 비율을 넘어서면 경고 대화상자가 나타납니다.</td>
  </tr>
  <tr>
    <td><a href="_MaxMem.htm">#MaxMem</a></td>
    <td>각 <a href="../Variables.htm">변수</a>의 최대 메모리를 지정된 개수의 메가바이트로 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="_MaxThreads.htm">#MaxThreads</a></td>
    <td>동시 <a href="../misc/Threads.htm">쓰레드</a>의 최대 갯수를 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a></td>
    <td><a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> 한계에 도달했을 때 키눌림을 무시하지 않고<a href="../Hotkeys.htm">핫키</a>가 버퍼 처리됩니다.</td>
  </tr>
  <tr>
    <td><a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a></td>
    <td><a href="../Hotkeys.htm">핫키</a> 또는 <a href="../Hotstrings.htm">핫스트링</a>당 동시 <a href="../misc/Threads.htm">쓰레드</a>의 최대 개수를 설정합니다.</td>
  </tr>
  <tr>
    <td><a href="_MenuMaskKey.htm">#MenuMaskKey</a></td>
    <td>Win 또는 Alt 키업 이벤를 마스크하는데 사용할 키를 변경합니다.</td>
  </tr>
  <tr>
    <td class="larger"><a href="_NoEnv.htm">#NoEnv</a></td>
    <td>환경 변수인지 알아보기 위해 빈 문자열을 점검하지 않습니다 (새로운 모든 스크립트에 권장합니다).</td>
  </tr>
  <tr>
    <td class="larger"><a href="_NoTrayIcon.htm">#NoTrayIcon</a></td>
    <td>트레이 아이콘을 보여주지 않습니다.</td>
  </tr>
  <tr>
    <td><a href="_Persistent.htm">#Persistent</a></td>
    <td>스크립트를 영구히 실행되도록 유지합니다 (즉, 사용자가 닫을 때까지 또는 <a href="ExitApp.htm">ExitApp</a>를 만날 때까지).</td>
  </tr>
  <tr>
    <td><a href="_SingleInstance.htm">#SingleInstance</a></td>
    <td>스크립트가 이미 실행 중일 때 다시 실행하는 것을 허용할지 여부를 결정합니다.</td>
  </tr>
  <tr>
    <td><a href="_UseHook.htm">#UseHook</a></td>
    <td>갈고리를 사용해 키보드 <a href="../Hotkeys.htm">핫키</a>를 구현하도록 강제합니다.</td>
  </tr>
  <tr>
    <td><a href="_Warn.htm">#Warn</a></td>
    <td>보통 개발자쪽 에러임을 나타내는 선택된 조건에 대하여 경고를 켜거나 끕니다.</td>
  </tr>
  <tr>
    <td><a href="_WinActivateForce.htm">#WinActivateForce</a></td>
    <td>부드럽게 창을 활성화하지 않고 직접 강제로 활성화합니다.</td>
  </tr>
</table>
</body>
</html>
