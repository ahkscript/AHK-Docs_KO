

<html>
<head>
<title>ControlGet</title>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGet</h1>

<p>콘트롤에 관하여 다양한 유형의 정보를 열람합니다.</p>

<pre class="Syntax">ControlGet, OutputVar, Cmd [, Value, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]</pre>
<h3>매개변수</h3>
<dl>

  <dt>OutputVar</dt>
  <dd><p><em>Cmd</em> 명령의 결과를 저장할 변수의 이름.</p></dd>

  <dt>Cmd, Value</dt>
  <dd>아래 리스트 참조
    </dd>

  <dt>Control</dt>
  <dd><p>ClassNN (콘트롤의 클래스이름과 실체 번호) 또는 콘트롤의 텍스트일 수 있습니다. 둘 모두 Window Spy를 통하여 알아낼 수 있습니다. 텍스트를 사용할 때, 부합하는 행위는 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>로 결정됩니다. 이 매개변수가 비어 있으면, 목표 창의 최상위 콘트롤이 사용됩니다.</p>
    <p>
	콘트롤의 HWND (창 핸들)에 작동시키려면, <em>Control</em> 매개변수를 빈 채로 두고 <code>ahk_id %ControlHwnd%</code>를 <em>WinTitle</em> 매개변수에 지정하십시오 (이것은 숨은 콘트롤에도 작동합니다. <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>가 꺼져 있어도 상관없습니다). 콘트롤의 HWND는 전형적으로 <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, 또는 <a href="DllCall.htm">DllCall</a>을 통하여 열람합니다.</p></dd>

  <dt>WinTitle</dt>
  <dd><p>창 제목 또는 목표 창을 식별하는 기타 기준. <a href="../misc/WinTitle.htm">WinTitle</a> 참조.</p></dd>

  <dt>WinText</dt>
  <dd><p>존재하면 목표 창 텍스트의 부문자열입니다 (Window Spy에 노출됨). 숨은 텍스트는 <a href="DetectHiddenText.htm">DetectHiddenText</a>가 켜져(ON) 있어야 노출됩니다.</p></dd>

  <dt>ExcludeTitle</dt>
  <dd><p>제목에 이 값이 있는 창은 제외합니다.</p></dd>

  <dt>ExcludeText</dt>
  <dd><p>텍스트에 이 값이 있는 창은 제외합니다.</p></dd>

</dl>

<h3>Cmd, Value</h3>
<p>
<em>Cmd</em>와 <em>Value</em> 매개변수는 서로 의존합니다. 그 사용법은 아래에 기술합니다.</p>
<p>
<strong><a name="List"></a>List</strong>: ListView, ListBox, ComboBox, 또는 DropDownList로부터 항목 리스트를 열람합니다.</p>
<p>
<u>ListView</u>: ListView를 열람하는 구문은 다음과 같습니다:</p>

<pre>ControlGet, OutputVar, List, <strong>Options</strong>, SysListView321, WinTitle, WinText</pre>
<p>
<em>Options</em> 매개변수가 비어 있거나 생략되면, 콘트롤에 있는 모든 텍스트가 열람됩니다. 마지막 행을 제외하고 각 행마다 라인피드 문자로 끝납니다 (`n). 각 행 안에서, 각 필드 (컬럼)은 마지막을 제외하고 탭 문자로 끝납니다 (`t).</p>
<p>
<em>Options</em>에 다음 단어들을 지정하십시오. 각 옵션은 다음 옵션과 스페이스 또는 탭으로 구분됩니다:</p>
<p><em>Selected</em>: 모든 행 말고 선택된 (강조된) 행들만 열람합니다. 아무것도 없으면, <em>OutputVar</em>는 비워집니다.<br>
  <em>Focused</em>: 초점 행만 열람합니다. 없으면, <em>OutputVar</em>는 비워집니다.<br>
  <em><a name="ColN"></a>Col4</em>: 모든 컬럼 말고 네 번째 컬럼(필드)만 열람합니다 (4를 원하는 번호로 교체). <br>
  <em>Count</em>: 콘트롤에 있는 전체 행의 개수를 열람합니다.<br>
  <em>Count Selected</em>: 선택된 (강조된) 행의 개수를 열람합니다.<br>
  <em>Count Focused</em>: 초점 행의번호(위치)를 열람합니다 (없으면 0).<br>
<em>Count Col</em>: 콘트롤에 있는 컬럼의 개수를 열람합니다 (또는 개수를 셀 수 없으면 -1).</p>
<p>
주의: 어떤 어플리케이션은 ListView 텍스트를 따로 보관합니다. 그 때문에 텍스트를 열람할 수 없습니다. 이런 경우, ErrorLevel은 보통 0으로 설정됩니다 (성공을 뜻함). 그러나 열람된 필드는 비어 있을 것입니다. 또한  ListView 텍스트 열람은 <a href="_MaxMem.htm">#MaxMem</a>으로 제한되지 않습니다.</p>
<p>
성공하면, ErrorLevel은 0이 설정됩니다. 실패하면 1로 설정되고 <em>OutputVar</em>는 비워집니다. 실패는 다음과 같은 경우 일어납니다: 
<ol>
	<li>목표 창이나 콘트롤이 존재하지 않는다;
	<li>목표 창이 SysListView32 유형이 아니다;
	<li>ListView를 소유한 프로세스를 열 수 없다. 아마도 사용자가 권한이 없거나 잠겨 있기 때문일 것이다;
	<li><a href="#ColN">Col<em>N</em> 옵션</a>에 존재하지 않는 컬럼을 지정했다.
</ol> 
</p>
<p>
ListView로부터 개별적으로 행과 필드를 추출하려면, 다음 예제와 같이 <a href="LoopParse.htm">파싱 회돌이</a>를 사용하십시오:</p>

<pre>ControlGet, List, List, Selected, SysListView321, WinTitle
Loop, Parse, List, `n  <em>; 행은 라인피드로 구분됩니다 (`n).</em>
{
    RowNumber := A_Index
    Loop, Parse, A_LoopField, %A_Tab%  <em>; 각 행의 필드 (컬럼)은 탭으로 구분됩니다 (A_Tab).</em>
        MsgBox Row #%RowNumber% Col #%A_Index% is %A_LoopField%.
}</pre>
<p>
관련하여 말씀 드리자면, ListView의 컬럼은 <a href="PostMessage.htm">SendMessage</a>를 통하여 크기를 변경할 수 있습니다. 다음 예제에 보여줍니다:</p>

<pre>SendMessage, 4126, 0, 80, SysListView321, WinTitle  <em>; 4126은 메시지 LVM_SETCOLUMNWIDTH입니다.
; 위에서, 0은 첫 컬럼을 나타냅니다 (1은 두 번째, 2는 세 번째, 등등.)  또한, 80은 새 너비입니다.
; 80을 -1로 바꾸면 컬럼의 크기가 자동으로 조절됩니다. -2로 교체하면 헤더 텍스트 너비까지 고려하여 크기를 조절해 줍니다.</em></pre>
<p>
<u>ListBox, ComboBox, DropDownList</u>: 콘트롤로부터 모든 텍스트가 열람됩니다 (즉, 위의<em>Count</em>과 <em>Selected</em>같은 ListView 옵션은 지원하지 않습니다).</p>
<p>
각 행은 마지막을 제외하고 라인피드로 끝납니다 (`n). 항목에 개별적으로 접근하려면, 다음 예제와 같이 <a href="LoopParse.htm">파싱 회돌이</a>를 사용하십시오:</p>

<pre>ControlGet, List, List,, ComboBox1, WinTitle
Loop, Parse, List, `n
    MsgBox Item number %A_Index% is %A_LoopField%.</pre>
<p>
<strong>Checked</strong>: 체크박스나 라디오 버튼이 체크되어 있으면 <em>OutputVar</em>에 1을 설정합니다. 그렇지 않으면 0을 설정합니다.</p>
<p><strong>Enabled</strong>: <em>Control</em>이 활성화되어 있으면 <em>OutputVar</em>에 1을 설정합니다. 그렇지 않으면 0을 설정합니다.</p>
<p>
<strong>Visible</strong>: <em>Control</em>이 보이면 <em>OutputVar</em>에 1을 설공하고, 숨어 있으면 0을 설정합니다.</p>
<p>
<strong>Tab</strong>: <em>OutputVar</em>에 SysTabControl32 콘트롤의 탭 번호를 설정합니다. 첫 탭은 1, 두 번째 탭은 2입니다, 등등. 대신에 얼마나 많은 탭(페이지)가 탭 콘트롤에 있는지 알아 보려면, 다음 예제를 따르십시오:</p>

<pre><a href="PostMessage.htm">SendMessage</a>, 0x1304,,, SysTabControl321, WinTitle  <em>; 0x1304는 TCM_GETITEMCOUNT입니다.</em>
TabCount = %ErrorLevel%</pre>
<p>
<strong>FindString, String</strong>: ListBox 또는 ComboBox에서 <em>String</em>에 정확하게 일치한 엔트리의 갯수를 <em>OutputVar</em>에 설정합니다. 콘트롤의 첫 엔트리는 1이고, 두 번째 엔트리는 2입니다,  등등. 일치가 없으면, <em>OutputVar</em>는 비워지고 ErrorLevel은 1로 설정됩니다.</p>
<p>
<strong>Choice</strong>:  ListBox 또는 ComboBoxSet에서 현재 선택된 엔트리의 이름을 <em>OutputVar</em>에 설정합니다. 대신에 선택된 항목의 위치를 열람하려면, 다음 예제를 따르십시오 (앞의 두 줄만 사용합니다):</p>

<pre><a href="PostMessage.htm">SendMessage</a>, 0x188, 0, 0, ListBox1, WinTitle  <em>; 0x188은 LB_GETCURSEL입니다 (ListBox).</em>
<a href="PostMessage.htm">SendMessage</a>, 0x147, 0, 0, ComboBox1, WinTitle  <em>; 0x147은 CB_GETCURSEL입니다 (DropDownList 또는 ComboBox).</em>
ChoicePos = %ErrorLevel%  <em>; 항목이 선택되어 있지 않으면 -1이 설정됩니다.</em>
ChoicePos += 1  <em>; 0-기반에서 1-기반으로 변환합니다. 그래서 첫 항목은 0이 아니라, 1입니다.</em></pre>
<p>
<strong>LineCount</strong>: Edit 콘트롤의 줄의 개수를 <em>OutputVar</em>에 설정합니다. 모든 Edit 콘트롤은 콘트롤이 비어 있을지라도 적어도 1 줄이 있습니다.</p>
<p>
<strong>CurrentLine</strong>: Edit 콘트롤에서 현재 캐럿이 있는 (삽입 지점) 줄의 번호를 <em>OutputVar</em>에 설정합니다. 첫 줄은 1입니다. 콘트롤에 선택된 텍스트가 있다면, 선택이 시작하는 곳의 줄 번호를 <em>OutputVar</em>에 설정합니다.</p>
<p>
<strong>CurrentCol</strong>: Edit 콘트롤에서 현재 캐럿이 있는 (텍스트 삽입 지점) 열 번호를 <em>OutputVar</em>에 설정합니다. 첫 열은 1입니다. 선택된 텍스트가 콘트롤에 있다면, <em>OutputVar</em>에 선택이 시작되는 곳의 열 번호가 설정됩니다.</p>
<p>
<strong>Line, N</strong>: Edit 콘트롤에서 <em>N</em> 번 줄의 텍스트를 <em>OutputVar</em>에 설정합니다. Line 1은 첫 줄입니다. 콘트롤의 특성에 따라, <em>OutputVar</em>는 캐리지 리턴 (`r) 또는 캐리지 리턴 + 라인피드 (`r`n)로 끝날 수 있습니다. 지정된 줄 번호가 비어 있거나 존재하지 않으면, <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 에 1이 설정되고 <em>OutputVar</em>는 비워집니다.</p>
<p>
<strong>Selected</strong>: Edit 콘트롤에서 선택된 텍스트를 <em>OutputVar</em>에 설정합니다. 아무 텍스트도 선택되어 있지 않으면, OutputVar는 비워지고 ErrorLevel에는 0이 설정됩니다 (즉, 에러 없음). 어떤 유형의 콘트롤은 RichEdit20A와 같이 어떤 경우 올바르게 텍스트를 생산하지 않을 수 있습니다 (예, Metapad).</p>
<p>
<strong>Style</strong>: 콘트롤의 스타일을 나타내는 8-자리 십육진 수를 열람합니다. 스타일 목록은 <a href="../misc/Styles.htm">스타일 테이블</a>을 참조하십시오.</p>
<p>
<strong>ExStyle</strong>: 콘트롤의 확장 스타일을 나타내는 8-자리 십육진 수를 열람합니다.</p>
<p>
<strong><a name="Hwnd"></a>Hwnd</strong> <span class="ver">[v1.0.43.06+]:</span> 지정된 콘트롤의 창 핸들(HWND)을 열람합니다: <code>ControlGet, OutputVar, Hwnd,, Edit1, WinTitle</code>. 콘트롤의 HWND는 <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a>, 그리고 <a href="DllCall.htm">DllCall</a>에 자주 사용됩니다. 관련하여 말씀 드리자면, 콘트롤의 HWND는 <a href="MouseGetPos.htm">MouseGetPos</a>를 통해서 열람할 수도 있습니다. 마지막으로, 콘트롤의 HWND를 <a href="../misc/WinTitle.htm#ahk_id">ahk_id WinTitle</a>로 직접적으로 사용할 수 있습니다 (이것은 숨은 콘트롤에도 작동합니다. <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>가 꺼져 있어도 상관없습니다).</p>

<h3>ErrorLevel</h3>
<p>
<span class="ver">[v1.1.04+]</span> 이 명령어는 실패시 예외를 던질 수 있습니다. 더 자세한 정보는 <a href="Catch.htm#RuntimeErrors">실행시간 에러</a>를 참조하십시오.</p>
<p>성공하면, <a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 0이 설정됩니다. 문제가 발생하면 -- 존재하지 않는 창이나 콘트롤 같은 경우 -- <a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 1이 설정되고 <em>OutputVar</em>는 비워집니다.</p>

<h3>논평</h3>
<p>
콘트롤을 변경하는 명령어와 다르게, ControlGet은 자동 지연이 없습니다; 즉, <a href="SetControlDelay.htm">SetControlDelay</a>에 영향을 받지 않습니다.</p>
<p>
현재 마우스가 떠 있는 콘트롤의 ClassNN 또는 HWND를 알아내려면, <a href="MouseGetPos.htm">MouseGetPos</a>를 사용하십시오. 창의 콘트롤 목록을 얻으려면, <a href="WinGet.htm">WinGet ControlList</a>를 사용하십시오.</p>
<p>
창 제목과 텍스트는 대소문자를 구별합니다. 숨은 창은 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>가 켜져 있어야 탐지됩니다.</p>

<h3>관련 항목</h3>
<p><a href="Control.htm">Control</a>, <a href="GuiControlGet.htm">GuiControlGet</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="ControlGetPos.htm">ControlGetPos</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="WinGet.htm">WinGet</a></p>

<h3>예제</h3>

<pre class="NoIndent">ControlGet, OutputVar, Line, 1, Edit1, Some Window Title

ControlGet, WhichTab, Tab, , SysTabControl321, Some Window Title
if ErrorLevel
    MsgBox There was a problem.
else
    MsgBox Tab #%WhichTab% is active.</pre>

</body>
</html>
