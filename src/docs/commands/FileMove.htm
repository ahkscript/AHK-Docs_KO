

<html>
<head>
<title>FileMove</title>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>FileMove</h1>

<p>파일을 이동합니다.</p>

<pre class="Syntax">FileMove, SourcePattern, DestPattern [, Flag]</pre>
<h3>매개변수</h3>
<dl>

  <dt>SourcePattern</dt>
  <dd><p>단일 파일의 이름 또는 <code>C:\Temp\*.tmp</code>와 같은 와일드카드 패턴. <em>SourcePattern</em>은 절대 경로를 지정하지 않으면 <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a>에 있다고 간주됩니다.</p></dd>

  <dt>DestPattern</dt>
  <dd><p>목표의 이름 또는 패턴. 절대 경로를 지정하지 않으면 <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a>에 있다고 간주됩니다. 간단한 이동을 수행하려면 -- 기존의 파일 이름은 그대로 두고 -- 폴더 이름만 지정하십시오. 다음 두 예제는 기능상 동등합니다:</p>
<pre>FileMove, C:\*.txt, C:\My Folder</pre>
<pre>FileMove, C:\*.txt, C:\My Folder\*.*</pre>
    </dd>

  <dt>Flag</dt>
  <dd><p>(선택적) 이 플래그는 파일이 이미 존재하면 덮어쓸지 말지 결정합니다:</p>
      <p>0 = (기본) 기존의 파일을 덮어쓰지 않습니다<br>
        1 = 기존의 파일을 덮어씁니다</p>
      <p>이 매개변수는 <a href="../Variables.htm#Expressions">표현식</a>일 수 있습니다. 심지어 참이나 거짓으로 평가되면 무엇이든 될 수 있습니다. (참과 거짓은 내부적으로 1과 0으로 저장되기 때문입니다).</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> 이 명령어는 실패시 예외를 던질 수 있습니다. 더 자세한 정보는 <a href="Catch.htm#RuntimeErrors">실행시간 에러</a>를 참조하십시오.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 에러 때문에 이동에 실패한 파일의 개수가 설정됩니다. 그렇지 않으면 0이 설정됩니다. 그렇지만, 소스 파일이 단일 파일이고 (와일드카드 없음) 그리고 존재하지 않으면, ErrorLevel은 0이 설정됩니다. 이 상황을 탐지하려면 이동하기 전에 먼저 소스파일에 <a href="IfExist.htm">IfExist</a> 또는 <a href="../Functions.htm#FileExist">FileExist()</a>를 사용하십시오.</p>
<p>
<a href="FileCopy.htm">FileCopy</a>와 다르게, 파일을 자신에 이동하면 언제나 성공한 것으로 간주됩니다. 덮어쓰기 모드가 켜져 있지 않아도 마찬가지입니다.</p>
<p>
파일이 발견되면, <a href="../Variables.htm#LastError">A_LastError</a>는 0 (영)이 설정되거나 또는 마지막 실패후 즉시 운영 체제의 GetLastError() 함수의 결과가 설정됩니다. 그렇지 않으면 A_LastError에는 왜 파일이 발견되지 않았는지 알려주는 에러 코드가 담깁니다.</p>

<h3>논평</h3>
<p>
FileMove는 파일만 이동합니다. 대신 폴더의 내용을 (그의 모든 파일과 하위 폴더를 포함하여) 이동하려면, 아래 섹션의 예제를 참조하십시오. 단일 폴더를 이동하거나 이름을 바꾸려면, <a href="FileMoveDir.htm">FileMoveDir</a>을 사용하십시오.</p>
<p>
에러를 만나더라도 이동을 계속 진행합니다.</p>
<p>
이 명령어는 파일을 다른 볼륨에 이동시킬 수 있지만, 같은-볼륨 이동보다 시간이 더 걸립니다. 이것은 같은-볼륨 이동은 이름을 바꾸는 것과 비슷하고, 그래서 훨씬 더 빠르기 때문입니다.</p>

<h3>관련 항목</h3>
<p>
<a href="FileCopy.htm">FileCopy</a>, <a href="FileCopyDir.htm">FileCopyDir</a>, <a href="FileMoveDir.htm">FileMoveDir</a>, <a href="FileDelete.htm">FileDelete</a></p>

<h3>예제</h3>

<pre class="NoIndent">FileMove, C:\My Documents\List1.txt, D:\Main Backup\  <em>; 이름을 바꾸지 않고 파일을 이동합니다.</em>
FileMove, C:\File Before.txt, C:\File After.txt  <em>; 단일 파일의 이름을 바꿉니다.</em>
FileMove, C:\Folder1\*.txt, D:\New Folder\*.bkp  <em>; 파일을 새 확장자로 바꾸고 이동합니다.</em></pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; 다음 예제는 한 폴더 안의 모든 파일과 폴더를 다른 폴더로 이동합니다:</em>
ErrorCount := MoveFilesAndFolders(&quot;C:\My Folder\*.*&quot;, &quot;D:\Folder to receive all files &amp; folders&quot;)
if ErrorCount &lt;&gt; 0
    MsgBox %ErrorCount% files/folders could not be moved.

MoveFilesAndFolders(SourcePattern, DestinationFolder, DoOverwrite = false)
<em>; SourcePattern에 부합하는 모든 파일과 폴더를 DestinationFolder 이름의 폴더에 이동하고
; 이동에 실패한 파일/폴더의 개수를 돌려줍니다.
; 이 함수는 FileMoveDir의 모드 2를 사용하기 때문에 v1.0.38+이 필요합니다.</em>
{
    if DoOverwrite = 1
        DoOverwrite = 2  <em>; mode 2 vs. 1 사이의 설명은 <a href="FileMoveDir.htm">FileMoveDir</a>을 참조하십시오.</em>
    <em>; 먼저 모든 파일을 이동합니다 (폴더는 이동하지 않습니다):</em>
    FileMove, %SourcePattern%, %DestinationFolder%, %DoOverwrite%
    ErrorCount := ErrorLevel
    <em>; 이제 모든 폴더를 이동합니다:</em>
    Loop, %SourcePattern%, 2  <em>; 2는 &quot;폴더만 열람하라&quot;는 뜻입니다.</em>
    {
        FileMoveDir, %A_LoopFileFullPath%, %DestinationFolder%\%A_LoopFileName%, %DoOverwrite%
        ErrorCount += ErrorLevel
        if ErrorLevel  <em>; 문제의 폴더를 이름으로 보고합니다.</em>
            MsgBox Could not move %A_LoopFileFullPath% into %DestinationFolder%.
    }
    return ErrorCount
}</pre>

</body>
</html>
