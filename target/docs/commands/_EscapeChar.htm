<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>#EscapeChar (and explanation of escape sequences)</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#EscapeChar (피신 연속열 설명)</h1>

<p>스크립트의 피신 문자를 변경합니다 (예, accent vs. backslash).</p>

<pre class="Syntax">#EscapeChar NewChar</pre>
<h3>매개변수</h3>
<dl>

  <dt>NewChar</dt>
  <dd><p>문자 하나를 지정합니다.</p></dd>

</dl>
<h3>논평</h3>
<p>
피신 문자는 바로 다음에 오는 문자가 정상과 다르게 번역되어야 한다는 것을 나타내는 데 사용됩니다.</p>
<p>
기본 피신 문자는 액센트/백틱입니다 (`).</p>

<h3>피신 연속열 (액센트가 피신 문자일 때)</h3>
<table class="info">
  <tr>
    <th>다음은</th>
    <th>이렇게 번역됩니다</th>
  </tr>
  <tr>
    <td width="15%">`,</td>
    <td width="85%">, (글자 그대로의 쉼표). <strong>주의:</strong> 쉼표가 명령어의 마지막 매개변수에 나타나면 피신시킬 필요가 없습니다. 왜냐하면 프로그램이 그것을 문자 그대로 취급해야 한다는 것을 알고 있기 때문입니다. <a href="MsgBox.htm">MsgBox</a>의 모든 매개변수에도 마찬가지 규칙이 적용됩니다. 왜냐하면 똑똑한 쉼표 처리 방법을 알고 있기 때문입니다.</td>
  </tr>
  <tr>
    <td>`%</td>
    <td>% (글자 그대로의 퍼센트)</td>
  </tr>
  <tr>
    <td>``</td>
    <td>` (글자 그대로의 액센트; 즉, 두 개의 연속 피신 연속열은 하나의 글자 그대로의 문자가 결과가 됩니다.)</td>
  </tr>
  <tr>
    <td>`;</td>
    <td>&nbsp;; (글자 그대로의 쌍반점). <strong>주의:</strong> 쌍반점의 왼쪽에 <u>스페이스나 탭이 있을 경우에만</u> 필요합니다. 그렇지 않다면, 피신시키지 않아도 올바르게 인지합니다.</td>
  </tr>
  <tr>
    <td>`::</td>
    <td>:: (글자 그대로의 쌍점 쌍). v1.0.40+에서는 더 이상 피신시킬 필요가 없습니다.</td>
  </tr>
  <tr>
    <td>`n</td>
    <td>새줄 (라인피드/LF)</td>
  </tr>
  <tr>
    <td>`r</td>
    <td>캐리지 리턴 (CR)</td>
  </tr>
  <tr>
    <td>`b</td>
    <td>백스페이스</td>
  </tr>
  <tr>
    <td>`t</td>
    <td>탭 (전형적인 수평 탭)</td>
  </tr>
  <tr>
    <td>`v</td>
    <td>수직 탭 -- Ascii 값 11에 상응. 어떤 어플리케이션에서는 Control+K를 타자해 명확하게 밝힐 수 있습니다.</td>
  </tr>
  <tr>
    <td>`a</td>
    <td>벨소리 (bell) -- Ascii 값 7에 상응. 어떤 어플리케이션에서는 Control+G를 타자해 명확하게 밝힐 수 있습니다.</td>
  </tr>
  <tr>
    <td>`f</td>
    <td>폼피드 -- Ascii 값 12에 상응. 어떤 어플리케이션에서는 Control+L를 타자해 명확하게 밝힐 수 있습니다.</td>
  </tr>
  <tr>
    <td>Send</td>
    <td>
	<a href="Send.htm">Send 명령어</a>나 <a href="../Hotstrings.htm">핫스트링</a>이 기본 모드 (비-날 모드)에서 사용될 때, {}^!+#와 같은 문자들은 특별한 의미가 있습니다. 그러므로, 이런 경우 문자 그대로 사용하려면, 활괄호로 둘러 싸십시오. 예를 들어: <code>Send {<strong>^</strong>}{<strong>!</strong>}{<strong>{</strong>}</code>.</td>
  </tr>
  <tr>
    <td>&quot;&quot;</td>
    <td><a href="../Variables.htm#Expressions">표현식</a> 안에서, 기호 그대로의 문자열 안에 둘러 싸인 두 개의 연속 따옴표는 문자 그대로의 하나의 따옴표로 결정됩니다.
	예를 들어: <code>Var := &quot;The color &quot;&quot;red&quot;&quot; was found.&quot;</code>.</td>
  </tr>
</table>
<h3>관련 항목</h3>
<p>
<a name="DerefChar"></a><a name="Delimiter"></a>
잘 사용되지 않는 다음 지시어도 존재합니다; 사용법은 다음 예제에 보여줍니다:</p>

<pre>#DerefChar #  <em>; 보통의 기본값 퍼센트를 샵으로 바꿉니다.</em>
#Delimiter /  <em>; 보통의 기본값 쉼표를 정사선으로 바꿉니다</em></pre>

<h3>예제</h3>
<pre class="NoIndent">#EscapeChar \  <em>; 기본 값 액센트 (`) 대신에 역사선으로 변경합니다.</em></pre>

</body>
</html>
