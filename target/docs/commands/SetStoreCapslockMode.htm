<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>SetStoreCapslockMode</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>SetStoreCapslockMode</h1>

<p><a href="Send.htm">Send</a> 후에 CapsLock의 상태를 복구할지 말지 결정합니다 .</p>

<pre class="Syntax">SetStoreCapslockMode, On|Off</pre>
<h3>매개변수</h3>
<dl>

  <dt>On|Off</dt>
  <dd><p><strong>On</strong>: 모든 스크립트에 최초로 설정됩니다: CapsLock 키는 <a href="Send.htm">Send</a>가 자신의 연산을 위해 잠시 그것을 변경할 필요가 있었다면 그의 이전 값으로 복구됩니다.</p>
    <p><strong>Off</strong>: CapsLock 키의 상태를 절대 바꾸지 않습니다. 결과적으로, <a href="Send.htm">Send</a>의 연산 동안 어쩌다가 Capslock 키가 켜졌다면(ON) 문자의 대소문자가 반대로 나타날 것입니다.</p></dd>

</dl>

<h3>논평</h3>
<p>이것은 Capslock 키가 <a href="Send.htm">Send</a>와 <a href="ControlSend.htm">ControlSend</a>에 대하여 언제나 꺼지는 것은 아니라는 뜻입니다. 성공적으로 꺼졌다고 할지라도, 키들이 전송된 후에 다시 원래대로 켜지지 않을 수도 있습니다.</p>
<p>이 명령어는 자주 사용되지 않습니다. 왜냐하면 기본값이 대부분의 경우 제일 좋기 때문입니다.</p>
<p>새로 기동된 <a href="../misc/Threads.htm">쓰레드</a>마다 (<a href="../Hotkeys.htm">핫키</a>, <a href="Menu.htm">맞춤 메뉴 항목</a>, 또는 <a href="SetTimer.htm">타이머</a> 서브루틴) 이 명령어에 대한 기본값을 가지고 새로 시작합니다. 이 설정은 이 명령어를 자동-실행 섹션에 (스크립트의 상단 부분) 사용하면 바꿀 수 있습니다.</p>
<h3>관련 항목</h3>
<p><a href="SetNumScrollCapsLockState.htm">SetCaps/Num/ScrollLockState</a>, <a href="Send.htm">Send</a>, <a href="ControlSend.htm">ControlSend</a></p>
<h3>예제</h3>
<pre class="NoIndent">SetStoreCapslockMode, off</pre>

</body>
</html>
