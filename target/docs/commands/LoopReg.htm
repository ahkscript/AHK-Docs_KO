<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Loop (레지스트리)</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Loop (레지스트리)</h1>

<p>지정된 레지스트리 서브키의 내용을 한 번에 하나씩 열람합니다.</p>

<pre class="Syntax">Loop, Reg, RootKey[\Key, Mode]  <em>; v1.1.21+ (권장)</em></pre>
<pre class="Syntax">Loop, RootKey [, Key, IncludeSubkeys?, Recurse?]</pre>
<h3>매개변수</h3>
<dl>

  <dt>Reg <span class="ver">[v1.1.21+]</span></dt>
  <dd><p>문자 그대로의 단어 <code>Reg</code> (대소문자 구분). 변수나 표현식 불가능. 이 키워드가 존재하면, <em>Key</em>는 반드시 쉼표 대신에 정사선으로 <em>RootKey</em>와 분리해야 합니다. 둘 모두 하나의 변수에 담길 수 있습니다. 예를 들어, <code>Loop, Reg, HKLM\Software</code> 또는 <code>Loop, Reg, %FullPathOfKey%</code>.</p></dd>

  <dt>RootKey</dt>
  <dd><p>HKEY_LOCAL_MACHINE (HKLM), HKEY_USERS (HKU), HKEY_CURRENT_USER (HKCU), HKEY_CLASSES_ROOT (HKCR), 또는 HKEY_CURRENT_CONFIG (HKCC) 중 하나가 되어야 합니다.</p>
      <p>원격 레지스트리에 접근하려면, 컴퓨터 이름과 쌍점을 앞에 배치하십시오. 다음 예제와 같이: \\workstation01:HKEY_LOCAL_MACHINE</p></dd>

  <dt>Key</dt>
  <dd><p>키의 이름 (예, Software\SomeApplication). 비어 있거나 생략하면, <em>RootKey</em>의 내용이 열람됩니다.</p></dd>
  
  <dt>Mode <span class="ver">[v1.1.21+]</span></dt>
  <dd><p>다음 기호들로 구성됩니다:</p>
    <p><code>K</code>: 키를 포함합니다.<br>
    <code>V</code>: 값을 포함합니다. K와 V를 모두 생략하면 값들도 포함됩니다.<br>
    <code>R</code>: 하위키로 재귀해 들어갑니다. R이 생략되면, <em>Key</em>의 하위키의 키와 값은 포함되지 않습니다.</p>
  </dd>

  <dt>IncludeSubkeys?</dt>
  <dd><p>0 (기본값) <em>Key</em> 안에 포함된 하위키는 열람하지 않습니다 (오직 값만 열람합니다).<br>
  1 모든 값들과 하위키를 열람합니다.<br>
  2 하위키만 열람합니다 (값은 열람하지 않습니다).</p></dd>

  <dt>Recurse?</dt>
  <dd>0 (기본값) 하위키에 재귀하지 않습니다.<br>
1 하위키에 재귀해 들어갑니다. 그래서 그 안에 포함된 모든 값과 키를 열람합니다.</dd>

</dl>

<h3>논평</h3>
<p>레지스트리-회돌이는 레지스트리 값 또는 하위키의 집단을 한 번에 하나씩 처리하고 싶을 때 유용합니다. 값과 하위키는 역순으로 (아래에서 위로) 열람되므로 회돌이를 방해하지 않고 회돌이 안에 <a href="RegDelete.htm">RegDelete</a>를 사용할 수 있습니다.</p>
<p id="vars">다음 변수들이 레지스트리-회돌이 안에 존재합니다. 내부 레지스트리-회돌이가 외부 레지스트리-회돌이 안에 싸여 있다면, 내부 회돌이의 레지스트리 항목이 우선 순위를 갖습니다:</p>
<table class="info">
  <tr>
    <td>A_LoopRegName</td>
    <td>현재 열람된 항목의 이름. 값 이름 또는 하위키의 이름 중 하나입니다. 값 이름에 값이 할당되어 있으면 Windows RegEdit이 "(Default)"로 보여주는 값 이름이 열람됩니다. 그러나 A_LoopRegName는 값 이름에 대하여 비워집니다.</td>
  </tr>
  <tr>
    <td>A_LoopRegType</td>
    <td>현재 열람된 항목의 유형, 다음 단어 중 하나입니다: KEY (즉, 현재 열람된 항목은 값이 아니라 하위키입니다), REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, REG_QWORD, REG_BINARY, REG_LINK, REG_RESOURCE_LIST, REG_FULL_RESOURCE_DESCRIPTOR, REG_RESOURCE_REQUIREMENTS_LIST, REG_DWORD_BIG_ENDIAN (아마도 대부분의 윈도우즈 하드웨어에서는 보기 힘들 것입니다). 현재 열람된 항목이 미지의 유형이면 비어 있습니다.</td>
  </tr>
  <tr>
    <td>A_LoopRegKey</td>
    <td>접근 중인 루트 키의 이름 (HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, 또는 HKEY_CURRENT_CONFIG). 원격 레지스트리 접근을 위하여, 이 값은 컴퓨터 이름을 <strong>포함하지 않습니다</strong>.</td>
  </tr>
  <tr>
    <td>A_LoopRegSubKey</td>
    <td>현재 SubKey의 이름. 이 키는 <em>Key</em> 매개변수와 같습니다. 단, <em>Recurse</em> 매개변수가 재귀적으로 다른 하위키들을 탐험하는 데 사용중이면 예외입니다. 그런 경우라면, 현재 열람된 항목의 전체 경로입니다. 루트 키를 포함하지 않습니다. 예를 들어: Software\SomeApplication\My SubKey</td>
  </tr>
  <tr>
    <td>A_LoopRegTimeModified</td>
    <td>현재 하위키 또는 그의 값이 마지막으로 변경된 시간. 형식은 <a href="FileSetTime.htm">YYYYMMDDHH24MISS</a>. 이 변수는 현재 열람된 항목이 하위키가 아니면 비어 있습니다 (즉, <em>A_LoopRegType</em>는 단어 KEY가 아닙니다).</td>
  </tr>
</table>
<p>레지스트리-회돌이 안에서 사용될 때, 다음 명령어들을 사용하면 현재 열람된 항목을 처리해야 할지 말지 간단하게 알려줄 수 있습니다:</p>
<table class="info">
  <tr>
    <td width="21%"><a href="RegRead.htm">RegRead</a>, OutputVar</td>
    <td width="79%">현재 항목을 읽습니다. 현재 항목이 키이면, ErrorLevel에 1이 설정되고 <em>OutputVar</em>는 비워집니다.</td>
  </tr>
  <tr>
    <td><a href="RegWrite.htm">RegWrite</a> [, Value]</td>
    <td>현재 항목을 씁니다. <em>Value</em>를 생략하면, 항목은 그의 유형에 따라 0이 되거나 비워집니다. 현재 항목이 키이면, ErrorLevel은 1이 설정되고 다른 효과는 전혀 없습니다.</td>
  </tr>
  <tr>
    <td><a href="RegDelete.htm">RegDelete</a></td>
    <td>현재 항목을 삭제합니다. 현재 항목이 키이면, 그의 서브키 그리고 그 안에 포함된 값까지 함께 삭제됩니다.</td>
  </tr>
</table>
<p>(위에 기술된 <em>RootKey</em> 매개변수를 통하여) 원격 레지스트리에 접근할 때, 다음 사항이 적용됩니다:</p>
<ul>
  <li>목표 머신은 원격 레지스트리 서비스를 실행하고 있어야 합니다.</li>
  <li>목표 컴퓨터가 여러분의 도메인과 같은 도메인에 있지 않다면 또는 지역이나 원격 사용자이름이 충분한 권한이 없다면 원격 레지스트리 접근은 실패할 수 있습니다 (그렇지만, 가능한 해결책은 아래를 참조하십시오).</li>
  <li>사용자이름의 도메인, 작업그룹, 그리고/또는 권한에 따라, 원격 레지스트리 접근을 시도하기 전에, 먼저 드라이브를 맵핑하거나 함으로써, 공유 장치에 접속할 필요가 있습니다. 그런 식으로 접속하면 -- 레지스트리에 접근하거나 편집할 수 있는 권한이 있는 원격 사용자이름과 암호를 사용하여 접속하면 -- 원격 레지스트리 접근이 활성화되는 부작용이 있을 수 있습니다.</li>
  <li>이미 목표 컴퓨터에 다른 사용자로 접속했다면 (예를 들어, 사용자 Guest를 통하여 맵 드라이브에 접속했다면), 접속을 끊어서 원격 레지스트리 특징에 다시 접속해 여러분의 현재 로그-온 사용자이름으로 재-인증받을 필요가 있습니다.</li>
  <li>Windows Server 2003 그리고 Windows XP Professional에 대하여, MSDN이 언급한 바에 의하면: "[레지스트리 서버] 컴퓨터가 작업그룹에 참여하고 <em>로컬 계정을 사용하는 네크워크 로그온 사용자를 강제로 Guest로 인증받게 하는</em> 정책이 활성화되어 있다면, 그 기능은 실패합니다. 컴퓨터가 작업그룹에 참여한다면 이 정책이 기본값으로 활성화되어 있는지 확인 하십시오."</li>
  <li>Windows XP Home Edition에 대하여, MSDN이 언급한 바에 의하면 "이 기능은 언제나 실패합니다". Home Edition은 레지스트리 서버도 클라이언트도 없습니다. 물론 클라이언트는 OS cab 파일 중에서 추출할 수 있습니다.</li>
</ul>
<p><a href="Block.htm">Blocks</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, 그리고 A_Index 변수 (모든 유형의 회돌이에 존재함)에 관한 정보는 <a href="Loop.htm">Loop</a>를 참조하십시오.</p>
<h3>관련 항목</h3>
<p><a href="Loop.htm">Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">블록</a>, <a href="RegRead.htm">RegRead</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="RegDelete.htm">RegDelete</a>, <a href="SetRegView.htm">SetRegView</a></p>

<h3>예제</h3>
<pre class="NoIndent"><em>; 예제: 사용자가 타자한 인터넷 익스플로러의 URL 이력을 삭제합니다:</em>
Loop, HKEY_CURRENT_USER, Software\Microsoft\Internet Explorer\TypedURLs
    RegDelete</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; 예제: 작동하는 테스트 스크립트:</em>
Loop, Reg, HKEY_CURRENT_USER\Software\Microsoft\Windows, KVR
{
    if a_LoopRegType = key
        value =
    else
    {
        RegRead, value
        if ErrorLevel
            value = *error*
    }
    MsgBox, 4, , %a_LoopRegName% = %value% (%a_LoopRegType%)`n`nContinue?
    IfMsgBox, NO, break
}</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; 예제: 전체 레지스트리에서 특정 값을
; 재귀적으로 열람하는 예제.</em>
SetBatchLines -1  <em>; 최대 속도로 검색합니다.</em>
RegSearchTarget = Notepad  <em>; 서브루틴에 무엇을 검색하고 싶은지 알립니다.</em>
Gosub, RegSearch
return

RegSearch:
ContinueRegSearch = y
Loop, Reg, HKEY_LOCAL_MACHINE, KVR
{
    Gosub, CheckThisRegItem
    if ContinueRegSearch = n <em>; 멈추어야 합니다.</em>
        return
}
Loop, Reg, HKEY_USERS, KVR
{
    Gosub, CheckThisRegItem
    if ContinueRegSearch = n <em>; 멈추어야 합니다.</em>
        return
}
Loop, Reg, HKEY_CURRENT_CONFIG, KVR
{
    Gosub, CheckThisRegItem
    if ContinueRegSearch = n <em>; 멈추어야 합니다.</em>
        return
}
<em>; 주의: HKEY_USERS를 검색 중이라면
; HKEY_CURRENT_USER는 검색할 필요가 없다고 필자는 믿습니다.
; 마찬가지로 HKEY_LOCAL_MACHINE를 검색 중이라면.
; HKEY_CLASSES_ROOT도 검색할 필요가 없을 것입니다.</em>
return

CheckThisRegItem:
if A_LoopRegType = KEY  <em>; 키 이름도 점검하고 싶다면 다음 두 줄을 제거하십시오.</em>
    return
RegRead, RegValue
if ErrorLevel
    return
IfInString, RegValue, %RegSearchTarget%
{
    MsgBox, 4, , The following match was found:`n%A_LoopRegKey%\%A_LoopRegSubKey%\%A_LoopRegName%`nValue = %RegValue%`n`nContinue?
    IfMsgBox, No
        ContinueRegSearch = n  <em>; 호출자에게 검색을 멈추라고 알립니다.</em>
}
return</pre>

</body>
</html>
